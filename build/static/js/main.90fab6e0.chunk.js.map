{"version":3,"sources":["contexts/AuthContext.js","components/Signup.js","components/Login.js","components/Header.js","components/AddTracker.js","dashboard/stepsIntraday.js","severity-pill.js","dashboard/stepsTimeSeries.js","dashboard/latest-products.js","dashboard/heartrateTimeSeries.js","dashboard/sleepIntraday.js","dashboard/caloriesIntraday.js","dashboard/heartrateIntraday.js","dashboard/sleepEfficiency.js","icons/bell.js","icons/user-circle.js","icons/users.js","dashboard-navbar.js","icons/chart-bar.js","icons/cog.js","icons/user.js","icons/lock.js","icons/selector.js","icons/shopping-bag.js","icons/x-circle.js","icons/user-add.js","logo.js","nav-item.js","dashboard-sidebar.js","dashboard-layout.js","dashboard/calories-burned.js","components/Dashboard.js","components/MismatchError.js","components/InvalidTokenError.js","components/MyAccount.js","components/Share.js","components/Logs.js","reducers/rootReducer.js","reducers/AccessKey.js","App.js","index.js"],"names":["AuthContext","React","createContext","useAuth","useContext","AuthProvider","children","useState","currentUser","makeRequest","method","endpoint","need_auth","user","body","a","headers","Headers","append","state","store","getState","storeAccess","data","access","fetch","JSON","stringify","undefined","response","json","status_code","status","console","log","username","password","first_name","last_name","email","steps","heartrate","sleep","stepsintraday","heartrateintraday","key","value","date","startDate","endDate","login","signup","deleteAccount","authorization","logout","createKey","healthCareLogin","timeSeriesData","intradayData","refreshAuthKey","Provider","Signup","usernameRef","useRef","passwordRef","firstnameRef","lastnameRef","emailRef","navigate","useNavigate","error","setError","success","setSuccess","e","preventDefault","current","Card","Body","className","Alert","variant","Form","onSubmit","Group","id","Label","Control","type","ref","required","Button","to","Login","props","healthRef","keyRef","localStorage","setItem","dispatch","payload","created_at","updated_at","refresh","tempHC","parse","window","getItem","permissions","available_dates","detail","headersData","label","href","useStyles","makeStyles","header","backgroundColor","paddingRight","paddingLeft","logo","fontFamily","fontWeight","color","textAlign","menuButton","size","marginLeft","toolbar","display","justifyContent","Header","femmecubatorLogo","Typography","component","getMenuButtons","map","RouterLink","AppBar","Toolbar","AddTracker","authorization_url","location","replace","Navbar","style","padding","onClick","StepsIntraday","dateToday","Date","setDate","getDate","stepVal","setStepVal","formatDate","d","month","getMonth","day","year","getFullYear","length","join","useEffect","getSteps2","time_series","sx","height","CardContent","Grid","container","spacing","item","gutterBottom","Avatar","width","Box","pt","alignItems","styled","theme","ownerState","palette","main","borderRadius","contrastText","cursor","flexGrow","flexShrink","typography","fontSize","pxToRem","lineHeight","letterSpacing","minWidth","textTransform","whiteSpace","StepsTimeSeries","uuid","dateArray","setDateArray","activityStepArray","setActivityStepArray","i","stepsVal","dateVal","getActivitySteps","CardHeader","action","endIcon","title","option","text","tooltip","trigger","axisPointer","dataZoom","show","xAxisIndex","start","end","toolbox","feature","dataView","readOnly","restore","saveAsImage","xAxis","yAxis","axisLabel","formatter","series","p","subHours","now","HeartRateTimeSeries","useTheme","heartRateArray","setHeartRateArray","heartrateVal","resting_heartrate","getData2","Divider","SleepIntraday","efficiencyVal","setEfficiencyVal","getEfficiency2","efficiency","LinearProgress","CaloriesIntraday","caloriesVal","setCaloriesVal","caloriesTotal","getCalories2","heartrate_zones","caloriesOut","Math","round","HeartRateIntraday","setHeartRateVal","getHeartRate","SleepEfficiency","efficiencyVal2","setEfficiencyVal2","awakeVal","setAwakeVal","deepVal","setDeepVal","lightVal","setLightVal","getEfficiency","awakeValue","summary","wake","minutes","time_in_bed","toPrecision","deepValue","light","lightValue","deep","gaugeData","name","offsetCenter","valueAnimation","devices","background","paper","secondary","divider","primary","icon","AlarmIcon","TabletIcon","NotificationsPausedIcon","subheader","startAngle","endAngle","pointer","progress","overlap","roundCap","clip","itemStyle","borderWidth","borderColor","axisLine","lineStyle","splitLine","distance","axisTick","Icon","Bell","createSvgIcon","xmlns","viewBox","fill","UserCircle","fillRule","clipRule","Users","DashboardNavbarRoot","boxShadow","shadows","DashboardNavbar","onSidebarOpen","other","left","lg","disableGutters","minHeight","px","IconButton","xs","Tooltip","ml","Badge","badgeContent","src","ChartBar","Cog","User","XCircle","Logo","opacity","defaultProps","NavItem","others","router","useRouter","active","pathname","ListItem","mb","py","passHref","startIcon","disableRipple","items","DashboardSidebar","open","onClose","lgUp","useMediaQuery","breakpoints","up","defaultMatches","noSsr","isReady","asPath","content","flexDirection","my","Drawer","anchor","PaperProps","zIndex","appBar","DashboardLayoutRoot","flex","maxWidth","paddingTop","DashboardLayout","isSidebarOpen","setSidebarOpen","CaloriesBurned","caloriesBurnedArray","setCaloriesBurnedArray","j","getCalories","Dashboard","sm","xl","md","getLayout","page","NotFound","align","alt","marginTop","mt","InvalidToken","MyAccount","margin","Share","setSteps","setHeartRate","setSleep","setStepsIntraday","setHeartRateIntraday","keyVal","setKeyVal","for","onChange","target","checked","down","placeholder","Logs","rootReducer","combineReducers","persistConfig","version","storage","pReducer","persistReducer","createStore","__REDUX_DEVTOOLS_EXTENSION__","persistor","persistStore","tempLS","App","loading","Container","path","element","MismatchError","InvalidTokenError","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.90fab6e0.chunk.js","sourcesContent":["import React, { useContext, useState, useEffect } from \"react\"\n// import { store } from \"../index\";\nimport { store } from \"../App\";\nconst AuthContext = React.createContext()\n\nexport function useAuth() {\n  return useContext(AuthContext)\n}\n\nexport function AuthProvider({ children }) {\n  const [currentUser, setCurrentUser] = useState()\n\n\n  async function makeRequest(method, endpoint, need_auth, user, body,) {\n    const headers = new Headers()\n    headers.append(\"Content-Type\", \"application/json\")\n    headers.append(\"Accept\", \"application/json\")\n    if (need_auth) {\n      const state = store.getState();\n      if (user) {\n        headers.append(\"Authorization\", `Bearer ${state.storeAccess[0].data.access}`)\n      }\n      else{\n        headers.append(\"X-Authorization\", `Bearer ${state.storeAccess[0].data.access}`)\n      }\n     \n    }\n    try {\n       \n      const response = await fetch(`https://cap-api.sce.carleton.ca/${endpoint}`, {\n        method,\n        headers,\n        body: JSON.stringify(body) || undefined,\n      })\n      const data = await response.json()\n      const status_code = response.status\n      return {\n        data,\n        status_code\n      }\n    } catch (e) {\n      console.log(e)\n    }\n  }\n\n  async function signup(username, password, first_name, last_name, email) {\n    const endpoint = 'user/register'\n    \n    return await makeRequest('POST', endpoint, false, true, {\n      username,\n      password,\n      first_name,\n      last_name,\n      email\n    })\n  }\n\n  async function deleteAccount(password) {\n    const endpoint = 'user/delete'\n\n    return await makeRequest('DELETE', endpoint, true, true, {\n      password\n    })\n  }\n\n  async function authorization() {\n    const endpoint = 'tracker/auth'\n    return makeRequest('POST', endpoint, true, true, {})\n  }\n\n\n  async function login(username, password) {\n    const endpoint = 'user/login'\n    return await makeRequest('POST', endpoint, false, true, {\n      username,\n      password\n    })\n  }\n\n  async function logout() {\n    const endpoint = 'user/logout'\n    return await makeRequest('POST', endpoint, true, true, {})\n\n  }\n\n  async function createKey(steps, heartrate, sleep, stepsintraday, heartrateintraday) {\n    const endpoint = 'visualize/create-key'\n    return await makeRequest('POST', endpoint, true, true, {\n      \"notes\": \"3tet\",\n      \"permissions\": [\n        steps,\n        heartrate,\n        sleep,\n        stepsintraday,\n        heartrateintraday\n      ]\n    })\n  }\n\n  async function healthCareLogin(username,key) {\n    const endpoint = `visualize/view?username=${username}&key=${key}`\n    return await makeRequest('GET',endpoint, false, false)\n\n  }\n\n  async function intradayData(value,date) {\n    const endpoint = `visualize/intraday?type=${value}&date=${date}`\n    return await makeRequest('GET',endpoint, true, false,)\n\n  }\n\n  async function timeSeriesData(value,startDate, endDate) {\n    const endpoint = `visualize/time-series?type=${value}&start_date=${startDate}&end_date=${endDate}`\n    return await makeRequest('GET',endpoint, true, false,)\n\n  }\n  \n async function refreshAuthKey(){\n    const endpoint = 'visualize/create-key'\n    return await makeRequest('PUT',endpoint, true, false)\n  }\n\n\n  const value = {\n    currentUser,\n    login,\n    signup,\n    deleteAccount,\n    authorization,\n    logout,\n    createKey,\n    healthCareLogin,\n    timeSeriesData,\n    intradayData,\n    refreshAuthKey\n  }\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  )\n}\n","import React, { useRef, useState } from 'react'\nimport { Form, Button, Card, Alert } from 'react-bootstrap'\nimport {Link, Navigate, useNavigate} from \"react-router-dom\"\nimport { useAuth } from \"../contexts/AuthContext\"\n\nexport default function Signup() {\n    const usernameRef = useRef()\n    const passwordRef = useRef()\n    const firstnameRef = useRef()\n    const lastnameRef = useRef()\n    const emailRef = useRef()\n    const navigate = useNavigate();\n    const { signup } = useAuth()\n    const [error, setError] = useState(\"\")\n    const [success, setSuccess] = useState(\"\")\n    //const history = useNavigate()\n\n    async function handleSubmit(e) {\n        e.preventDefault()\n\n        try {\n        setError(\"\")\n        setSuccess(\"\")\n        const response = await signup(usernameRef.current.value, passwordRef.current.value, firstnameRef.current.value, lastnameRef.current.value, emailRef.current.value)\n        //history.push(\"/\")\n        console.log(response)\n        if(response.status_code === 201){\n            // setSuccess(\"Account successfully created\")  \n            navigate(\"/\")   \n        }else if(response.data.password){\n            setError(\"Weak password\")\n        } else if(response.data.username) {\n            setError(\"Username already exists\")\n        } else if(response.data.email){\n            setError(\"Email already been used\") \n        } \n        } catch {\n            setError(\"Failed to create an account\")\n        }\n    }\n    return (\n        <>\n       \n        <Card> \n            <Card.Body>\n                <h2 className = 'text-center mb-4'>Sign up</h2>\n                {error && <Alert variant=\"danger\">{error}</Alert>}\n                {success && <Alert variant=\"success\">{success}</Alert>}\n                <Form onSubmit={handleSubmit}>\n                    <Form.Group id =\"username\">\n                        <Form.Label>Username</Form.Label>\n                        <Form.Control type = \"username\" ref = {usernameRef} required />\n\n                    </Form.Group>\n                    <Form.Group id =\"first-name\">\n                        <Form.Label>First Name</Form.Label>\n                        <Form.Control type = \"firstname\" ref = {firstnameRef} required />\n                    </Form.Group>\n                    <Form.Group id =\"last-name\">\n                        <Form.Label>Last Name</Form.Label>\n                        <Form.Control type = \"lastname\" ref = {lastnameRef} required />\n                    </Form.Group>\n                    <Form.Group id =\"email\">\n                        <Form.Label>Email</Form.Label>\n                        <Form.Control type = \"email\" ref = {emailRef} required />\n                    </Form.Group>\n                    <Form.Group id =\"password\">\n                        <Form.Label>Password</Form.Label>\n                        <Form.Control type = \"password\" ref = {passwordRef} required />\n                    </Form.Group>\n                    <Button className = \"w-100 text\" type = \"submit\">Sign Up</Button>\n                </Form>\n            </Card.Body>\n        </Card>\n\n        <div className = \"w-100 text-center mt-2\">\n            Already have an account? <Link to = \"/\">Log in</Link>\n        </div>\n        </>\n    )\n}\n","// src/Login.js \nimport React, { useRef, useState } from \"react\"\nimport { Form, Button, Card, Alert } from \"react-bootstrap\"\nimport { useAuth } from \"../contexts/AuthContext\"\nimport { Link, useNavigate } from \"react-router-dom\"\n// import { store } from \"../index\";\nimport { store } from \"../App\";\n\n\nconst Login = (props) => {\n    const emailRef = useRef()\n    const passwordRef = useRef()\n    const healthRef = useRef()\n    const keyRef = useRef()\n    const navigate = useNavigate();\n    const { login } = useAuth()\n    const { healthCareLogin } = useAuth()\n    const [error, setError] = useState(\"\")\n    const [success, setSuccess] = useState(\"\")\n    //const history = useNavigate()\n\n    async function handleSubmit(e) {\n        e.preventDefault()\n\n        try {\n        setError(\"\")\n         \n        const response = await login(emailRef.current.value, passwordRef.current.value)\n        console.log(response)\n        // whole response in localstorage\n       const response2LS = localStorage.setItem(\"loginResp\",JSON.stringify(response));\n        \n        if(response.status_code !== 200){\n        //  if(response.status_code !== 200){\n            setError(\"Invalid username/password\")\n        } else {\n            \n            // store.dispatch({\n            //     type: \"storeAccess\",\n            //     payload: {\n                    \n            //         access: response.data.access\n            //     }\n            // });\n            // store whole response in store \n            store.dispatch({\n                type: \"storeAccess\",\n                payload: {\n                    data: {\n                        username: response.data.username,\n                        first_name: response.data.first_name,\n                        last_name: response.data.last_name,\n                        email: response.data.email,\n                        created_at: response.data.created_at,\n                        updated_at: response.data.updated_at,\n                        refresh: response.data.refresh,\n                        access: response.data.access,\n\n                    },\n                    status_code: response.status_code\n                    \n                }\n            });\n            console.log(store.getState());\n            //console.log( \"Loggin \"+ JSON.stringify(store.getState()));\n            // console.log( \"Loggin \"+ JSON.stringify(store.payload.access));\n            navigate(\"/addtracker\")\n            \n\n        }\n        } catch {\n        setError(\"Failed to log in\")\n        }\n    }\n\n    async function hcLogin(e) {\n        e.preventDefault()\n\n        try {\n            setError(\"\")\n            setSuccess(\"\")\n             \n            const response = await healthCareLogin(healthRef.current.value, keyRef.current.value )\n            console.log(response)\n            const response2HC = localStorage.setItem(\"healthCareResp\",JSON.stringify(response));\n            const tempHC = JSON.parse(window.localStorage.getItem(\"healthCareResp\"));\n            if (response.status_code === 200 ){\n                setSuccess(\"Health care provider Successfuly logged in \")\n                store.dispatch({\n                    type: \"storeHealthAccess\",\n                    payload: {\n                        data: {\n                            username: tempHC.data.username,\n                            permissions: tempHC.data.permissions,\n                            available_dates: tempHC.data.available_dates,\n                            // email: response.data.email,\n                            // created_at: response.data.created_at,\n                            // updated_at: response.data.updated_at,\n                            // refresh: response.data.refresh,\n                            access: tempHC.data.access,\n    \n                        },\n                        status_code: tempHC.status_code\n                        \n                    }\n                });\n                console.log(store.getState());\n                navigate(\"/dashboard\")\n            }\n            else{\n                if( response.data.detail === \"Invalid request\" ){\n                    setError(\"Username and key are not in query\")\n                }\n                else if (response.data.detail === \"No such user\") {\n                    setError(\"No such username\")\n                }\n                else {\n                    setError(\"No such key\")\n                }\n            }\n        \n        } \n        catch {\n            setError(\"Health Care provider failed to login\")\n        }\n\n    }\n\n    return (\n        <>\n      \n        <Card> \n            <Card.Body>\n                <h2 className = 'text-center mb-4'>Log in</h2>\n\n                {error && <Alert variant=\"danger\">{error}</Alert>}\n                \n                <Form onSubmit={handleSubmit}>\n                    <Form.Group id =\"username\">\n                        <Form.Label>Username</Form.Label>\n                        <Form.Control type = \"username\" ref={emailRef} required />\n\n                    </Form.Group>\n                    <Form.Group id =\"password\">\n                        <Form.Label>Password</Form.Label>\n                        <Form.Control type = \"password\" ref={passwordRef} required/>\n                    </Form.Group>\n                    \n                    <Button className=\"w-100\" type=\"submit\">\n                        Log In\n                    </Button>\n    \n                </Form>\n            </Card.Body>\n        </Card>\n\n        <div className = \"w-100 text-center mt-2\">\n            Need an account? <Link to = \"/signup\">Sign Up</Link>\n        </div>\n\n        {/* <Card>\n            <Card.Body>\n                <h3 className= 'text-center mb-4'>Health Care Provider Key</h3>\n                <Form>\n                <Form.Group id =\"username2\">\n                        <Form.Label>Username</Form.Label>\n                        <Form.Control type = \"username\" required />\n\n                    </Form.Group>\n                    <Form.Group id = \"key\">\n                        <Form.Label>Key</Form.Label>\n                        <Form.Control type = \"key\"/>\n                    </Form.Group>\n                    <Button onClick = {() => navigate(\"/dashboard\")} className = \"w-100 text\" >Log in</Button>\n                </Form>\n            </Card.Body>\n        </Card> */}\n\n        <Card>\n            <Card.Body>\n                <h3 className= 'text-center mb-4'>Health Care Provider Key</h3>\n                <Form onSubmit = {hcLogin}>\n                <Form.Group id =\"username2\">\n                        <Form.Label>Username</Form.Label>\n                        <Form.Control type = \"username\" ref={healthRef} required />\n\n                    </Form.Group>\n                    <Form.Group id = \"key\">\n                        <Form.Label>Key</Form.Label>\n                        <Form.Control type = \"key\" ref={keyRef} required />\n                    </Form.Group>\n\n                    <Button  className = \"w-100 text\" type = \"submit\">Log in</Button>\n                </Form>\n            </Card.Body>\n        </Card>\n\n    \n        </>\n        \n    );\n\n};\nexport default Login;","import { AppBar, Toolbar, Typography, makeStyles, Button } from \"@material-ui/core\";\nimport React from \"react\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport Login from \"./Login\";\n\nconst headersData = [\n    {\n      label: \"Share with Physician\",\n      href: \"/share\",\n    },\n    {\n      label: \"Add tracker\",\n      href: \"/dashboard\",\n    },\n    {\n      label: \"My Account\",\n      href: \"/account\",\n    },\n    {\n      label: \"Logs\",\n      href: \"/logs\",\n    },\n  ];\n\nconst useStyles = makeStyles(() => ({\n    header: {\n        backgroundColor: \"#400CCC\",\n        paddingRight: \"118px\",\n        paddingLeft: \"118px\",\n    },\n    logo: {\n      fontFamily: \"Work Sans, sans-serif\",\n      fontWeight: 600,\n      color: \"#FFFEFE\",\n      textAlign: \"left\",\n    },\n    menuButton: {\n        fontFamily: \"Open Sans, sans-serif\",\n        fontWeight: 700,\n        size: \"18px\",\n        marginLeft: \"38px\",\n     },\n     toolbar: {\n        display: \"flex\",\n        justifyContent: \"space-between\",\n      },\n  }));\n\nexport default function Header() {\n  const { header, logo, menuButton } = useStyles();\n\n  const displayDesktop = () => {\n    return (\n        <Toolbar>\n          {femmecubatorLogo}\n          <div>{getMenuButtons()}</div>\n        </Toolbar>\n      );\n  };\n\n  const femmecubatorLogo = (\n    <Typography variant=\"h6\" component=\"h1\" className ={logo}>\n      SYSC 4907 Group\n    </Typography>\n  );\n\n  const getMenuButtons = () => {\n    return headersData.map(({ label, href }) => {\n      return (\n        <Button\n          {...{\n            key: label,\n            color: \"inherit\",\n            to: href,\n            component: RouterLink,\n            className: menuButton\n          }}\n        >\n          {label}\n        </Button>\n      );\n    });\n  };\n\n  return (\n    <header>\n      <AppBar className={header}> {displayDesktop()}</AppBar>\n    </header>\n  );\n}","import React, { useState } from \"react\"\nimport { Card, Button, Alert, Navbar } from \"react-bootstrap\"\nimport { useAuth } from \"../contexts/AuthContext\"\nimport { Link, useNavigate } from \"react-router-dom\"\nimport Header from \"./Header\";\n\nexport default function AddTracker() {\n  const [error, setError] = useState(\"\")\n  const { authorization, currentUser, logout } = useAuth()\n  const navigate = useNavigate();\n\n  async function handleLogout() {\n    setError(\"\")\n\n    try {\n      navigate(\"/\")\n    } catch {\n      setError(\"Failed to log out\")\n    }\n  }\n\n  async function handleAuthorization(e) {\n    e.preventDefault()\n\n    try {\n    setError(\"\")\n    const response = await authorization()\n    console.log(response.data.authorization_url)\n    window.location.replace(response.data.authorization_url)\n    } catch {\n    setError(\"Failed to authorize\")\n    }\n}\n\n  return (\n    <>\n    <Navbar>\n        <Header />\n      </Navbar>\n\n      <Card style = {{padding: 70}}>\n        <Card.Body>\n          <h2 className=\"text-center mb-4\">Profile</h2>\n          {error && <Alert variant=\"danger\">{error}</Alert>}\n          {/* <Link to=\"/mismatcherror\" className=\"btn btn-primary w-100 mt-3\">\n            Add Tracker\n          </Link> */}\n          <Button onClick={handleAuthorization} className=\"w-100\" type=\"submit\">\n              Add Tracker\n          </Button>\n          {/* <Button onClick = {() => navigate(\"/invaliderror\")} className = \"w-100 text\" >Demo Error Page</Button> */}\n        </Card.Body>\n      </Card>\n      <div className=\"w-100 text-center mt-2\">\n        <Button variant=\"link\" onClick={handleLogout}>\n          Log Out\n        </Button>\n      </div>\n    </>\n  )\n}","import React, { useRef, useState, useEffect } from \"react\"\nimport { Avatar, Box, Card, CardContent, Grid, Typography, Button} from '@mui/material';\nimport { Form } from 'react-bootstrap'\nimport ArrowDownwardIcon from '@mui/icons-material/ArrowDownward';\nimport MoneyIcon from '@mui/icons-material/Money';\nimport DirectionsWalkIcon from '@mui/icons-material/DirectionsWalk';\nimport { useAuth } from \"../contexts/AuthContext\";\nimport { dateRangePickerDayClasses } from \"@mui/lab\";\n\n\nexport const StepsIntraday = (props) => {\n  const [error, setError] = useState(\"\")\n  const [success, setSuccess] = useState(\"\")\n  const { intradayData } = useAuth()\n  const { timeSeriesData } = useAuth()\n  const step = \"step\"\n  const heartrate = \"heartrate\"\n  const dateToday = new Date()\n  dateToday.setDate(dateToday.getDate() -1)\n  const [stepVal, setStepVal]= useState(\"\")\n\n  function formatDate(date) {\n    var d = new Date(date),\n        month = '' + (d.getMonth() + 1),\n        day = '' + (d.getDate()),\n        year = d.getFullYear();\n    if (month.length < 2) \n        month = '0' + month;\n    if (day.length < 2) \n        day = '0' + day;\n\n    return [year, month, day].join('-');\n}\n\nuseEffect(() => {\n  const getSteps2 = async () => {\n    const response = await intradayData(step, formatDate(dateToday))\n        console.log(response)\n        if (response.status_code === 200 ){\n            // return response.data.steps\n            console.log(response.data.time_series.steps)\n            setStepVal(response.data.time_series.steps)\n            return response.data.time_series.steps\n        } else {\n          setStepVal(\"N/A\")\n        }\n  };\n  getSteps2();\n}, []);\n\n  // async function getSteps(e) {\n  //   e.preventDefault()\n  \n  //   try {\n  //       setError(\"\")\n  //       const response = await intradayData(step, formatDate(dateToday))\n  //       console.log(response)\n  //       if (response.status_code === 200 ){\n  //           // return response.data.steps\n  //           console.log(response.data.time_series.steps)\n  //           setStepVal(response.data.time_series.steps)\n  //           return response.data.time_series.steps\n  //       }\n  //   }\n  //   catch {\n  //       setError(\"Can't get steps\")\n  //   }\n  \n  // }\n\n  return (\n    <Card\n    sx={{ height: '100%' }}\n    {...props}\n  >\n    <CardContent>\n      <Grid\n        container\n        spacing={3}\n        sx={{ justifyContent: 'space-between' }}\n      >\n        <Grid item>\n          <Typography\n            color=\"textSecondary\"\n            gutterBottom\n            variant=\"overline\"\n          >\n            Steps\n          </Typography>\n          <Typography\n            color=\"textPrimary\"\n            variant=\"h4\"\n          >\n            {stepVal}\n            {/* <Button onClick = {getData}>HEY</Button> */}\n            {/* <div onLoad = {getSteps}></div> */}\n            {/* 2,297 */}\n          </Typography>\n        </Grid>\n        <Grid item>\n          <Avatar\n            sx={{\n              backgroundColor: 'error.main',\n              height: 56,\n              width: 56\n            }}\n          >\n            <DirectionsWalkIcon />\n          </Avatar>\n        </Grid>\n      </Grid>\n      <Box\n        sx={{\n          pt: 2,\n          display: 'flex',\n          alignItems: 'center'\n        }}\n      >\n        {/* <ArrowDownwardIcon color=\"error\" />\n        <Typography\n          color=\"error\"\n          sx={{\n            mr: 1\n          }}\n          variant=\"body2\"\n        >\n          12%\n        </Typography>\n        <Typography\n          color=\"textSecondary\"\n          variant=\"caption\"\n        >\n          Since yesterday\n        </Typography> */}\n      </Box>\n    </CardContent>\n  </Card>\n\n  );\n\n}; ","import PropTypes from 'prop-types';\nimport { styled } from '@mui/material/styles';\n\nconst SeverityPillRoot = styled('span')(({ theme, ownerState }) => {\n  const backgroundColor = theme.palette[ownerState.color].main;\n  const color = theme.palette[ownerState.color].contrastText;\n\n  return {\n    alignItems: 'center',\n    backgroundColor,\n    borderRadius: 12,\n    color,\n    cursor: 'default',\n    display: 'inline-flex',\n    flexGrow: 0,\n    flexShrink: 0,\n    fontFamily: theme.typography.fontFamily,\n    fontSize: theme.typography.pxToRem(12),\n    lineHeight: 2,\n    fontWeight: 600,\n    justifyContent: 'center',\n    letterSpacing: 0.5,\n    minWidth: 20,\n    paddingLeft: theme.spacing(1),\n    paddingRight: theme.spacing(1),\n    textTransform: 'uppercase',\n    whiteSpace: 'nowrap'\n  };\n});\n\nexport const SeverityPill = (props) => {\n  const { color = 'primary', children, ...other } = props;\n\n  const ownerState = { color };\n\n  return (\n    <SeverityPillRoot\n      ownerState={ownerState}\n      {...other}\n    >\n      {children}\n    </SeverityPillRoot>\n  );\n};\n\nSeverityPill.propTypes = {\n  children: PropTypes.node,\n  color: PropTypes.oneOf([\n    'primary',\n    'secondary',\n    'error',\n    'info',\n    'warning',\n    'success'\n  ])\n};\n","import { format } from 'date-fns';\nimport { v4 as uuid } from 'uuid';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport ArrowDropDownIcon from '@mui/icons-material/ArrowDropDown';\nimport {\n  Box,\n  Button,\n  Card,\n  CardHeader,\n  CardContent,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  TableSortLabel,\n  Tooltip\n} from '@mui/material';\nimport ArrowRightIcon from '@mui/icons-material/ArrowRight';\nimport { SeverityPill } from '../severity-pill';\nimport ReactEcharts from \"echarts-for-react\";\nimport { store } from \"../App\";\nimport { useAuth } from \"../contexts/AuthContext\";\nimport { useEffect, useState} from 'react';\nimport Dashboard from '../components/Dashboard';\n\nconst orders = [\n  {\n    id: uuid(),\n    ref: 'CDD1049',\n    amount: 30.5,\n    customer: {\n      name: 'Ekaterina Tankova'\n    },\n    createdAt: 1555016400000,\n    status: 'pending'\n  },\n  {\n    id: uuid(),\n    ref: 'CDD1048',\n    amount: 25.1,\n    customer: {\n      name: 'Cao Yu'\n    },\n    createdAt: 1555016400000,\n    status: 'delivered'\n  },\n  {\n    id: uuid(),\n    ref: 'CDD1047',\n    amount: 10.99,\n    customer: {\n      name: 'Alexa Richardson'\n    },\n    createdAt: 1554930000000,\n    status: 'refunded'\n  },\n  {\n    id: uuid(),\n    ref: 'CDD1046',\n    amount: 96.43,\n    customer: {\n      name: 'Anje Keizer'\n    },\n    createdAt: 1554757200000,\n    status: 'pending'\n  },\n  {\n    id: uuid(),\n    ref: 'CDD1045',\n    amount: 32.54,\n    customer: {\n      name: 'Clarke Gillebert'\n    },\n    createdAt: 1554670800000,\n    status: 'delivered'\n  },\n  {\n    id: uuid(),\n    ref: 'CDD1044',\n    amount: 16.76,\n    customer: {\n      name: 'Adam Denisov'\n    },\n    createdAt: 1554670800000,\n    status: 'delivered'\n  }\n];\n\nexport const StepsTimeSeries = (props) =>{\n  const state = store.getState();\n  const [dateArray, setDateArray] = useState([]);\n  const [activityStepArray, setActivityStepArray] = useState([]);\n  const { timeSeriesData } = useAuth()\n  const steps = \"step\"\n  const dateToday = new Date()\n  dateToday.setDate(dateToday.getDate() -1)\n  const [error, setError] = useState(\"\")\n\n  function formatDate(date) {\n    var d = new Date(date),\n        month = '' + (d.getMonth() + 1),\n        day = '' + (d.getDate()),\n        year = d.getFullYear();\n    if (month.length < 2) \n        month = '0' + month;\n    if (day.length < 2) \n        day = '0' + day;\n\n    return [year, month, day].join('-');\n}\n\n    useEffect(() => {\n      const getActivitySteps = async () => {\n        const response = await timeSeriesData(steps, \"2022-01-01\", formatDate(dateToday))\n        console.log(response)\n        if(response.status_code === 203){\n          <Dashboard stepsVal2 = {false}/>\n        }\n        setDateArray([])\n        setActivityStepArray([])\n        for (var i = 0; i < response.data.length; i++) {\n          var stepsVal = response.data[i].steps;\n          var dateVal = response.data[i].date;\n          setDateArray(dateArray => [...dateArray, dateVal]);\n          setActivityStepArray(activityStepArray => [...activityStepArray, stepsVal]);\n        //   // heartRateArray.push(heartrateVal)\n        //   // dateArray.push(dateVal)\n        //   // console.log(heartrateVal.resting_heartrate);\n        }\n        <Dashboard stepsVal2 = {true}/>\n        // console.log(dateArray)\n        // console.log(heartRateArray)\n      };\n      getActivitySteps();\n    }, []);\n\n    async function lastYearActivity(e) {\n      e.preventDefault()\n    \n      try {\n          setError(\"\")\n          const response = await timeSeriesData(steps, \"2021-01-01\", \"2021-12-30\")\n          console.log(response)\n          setDateArray([])\n          setActivityStepArray([])\n          for (var i = 0; i < response.data.length; i++) {\n            var stepsVal = response.data[i].steps;\n            var dateVal = response.data[i].date;\n            setDateArray(dateArray => [...dateArray, dateVal]);\n            setActivityStepArray(activityStepArray => [...activityStepArray, stepsVal]);\n          //   // heartRateArray.push(heartrateVal)\n          //   // dateArray.push(dateVal)\n          //   // console.log(heartrateVal.resting_heartrate);\n          }\n          // console.log(dataArray)\n          // console.log(dateArray)\n      }\n      catch {\n          setError(\"Can't get steps\")\n      }\n    }\n    \n  return (\n    <Card {...props}>\n    <CardHeader\n    action={(\n      <div>\n          <Button\n            endIcon={<ArrowDropDownIcon fontSize=\"small\" />}\n            size=\"small\"\n          >\n            Year\n          </Button>\n          <div>\n              <Button onClick = {lastYearActivity} size = \"small\">2021</Button>\n          </div>\n          </div>\n    )} \n    title=\"Activity Steps\" />\n    <CardContent>\n    <ReactEcharts\n      option={{\n        title: {\n          text: `${state.storeAccess[0].data.username} Activity Steps`,\n        },\n        tooltip: {\n          trigger: 'axis',\n          axisPointer: {\n            type: 'shadow'\n          }\n        },\n        dataZoom: [\n          {\n            type: 'slider',\n            show: true,\n            xAxisIndex: [0],\n            start: 98,\n            end: 100\n          },\n        ],\n        toolbox: {\n          show: true,\n          feature: {\n            dataView: { readOnly: false },\n            restore: {},\n            saveAsImage: {}\n          }\n        },\n        xAxis: {\n          type: 'category',\n          data: dateArray\n          // data: ['2021-10-09', '2021-10-10', '2021-10-11', '2021-10-12', '2021-10-13', '2021-10-14', '2021-10-15', '2021-10-16', '2021-10-17', '2021-10-18', '2021-10-19', '2021-10-20', '2021-10-21', '2021-10-22', '2021-10-23', '2021-10-24', '2021-10-25', '2021-10-26', '2021-10-27', '2021-10-28', '2021-10-29', '2021-10-30', '2021-10-31', '2021-11-01', '2021-11-02', '2021-11-03', '2021-11-04', '2021-11-05', '2021-11-06', '2021-11-07', '2021-11-08', '2021-11-09', '2021-11-10', '2021-11-11', '2021-11-12', '2021-11-13', '2021-11-14', '2021-11-15', '2021-11-16', '2021-11-17', '2021-11-18', '2021-11-19', '2021-11-20', '2021-11-21', '2021-11-22', '2021-11-23', '2021-11-24', '2021-11-25', '2021-11-26' ]\n        },\n        yAxis: {\n          type: 'value', \n          axisLabel: {\n            formatter: '{value} Steps'\n          },\n        },\n        series: [\n          {\n            data: activityStepArray,\n            // data: [4168, 12441, 3297, 2801, 5465, 5609, 3907, 3487, 2967, 4988, 3620, 3648, 3635, 7262, 2138, 2177, 3431, 3424, 5990, 5262, 3882, 10322, 4370, 2621, 4715, 2951, 8873, 7002, 3711, 2692, 3106, 5574, 3381, 3430, 3492, 4225, 2738, 2048, 4196, 6041, 2918, 2366, 3848, 7078, 3129, 2387, 3252, 2626, 6399],\n            type: 'line'\n          }\n        ]\n        }}\n      />\n    </CardContent>\n    {/* <PerfectScrollbar>\n      <Box sx={{ minWidth: 800 }}>\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell>\n                Order Ref\n              </TableCell>\n              <TableCell>\n                Customer\n              </TableCell>\n              <TableCell sortDirection=\"desc\">\n                <Tooltip\n                  enterDelay={300}\n                  title=\"Sort\"\n                >\n                  <TableSortLabel\n                    active\n                    direction=\"desc\"\n                  >\n                    Date\n                  </TableSortLabel>\n                </Tooltip>\n              </TableCell>\n              <TableCell>\n                Status\n              </TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {orders.map((order) => (\n              <TableRow\n                hover\n                key={order.id}\n              >\n                <TableCell>\n                  {order.ref}\n                </TableCell>\n                <TableCell>\n                  {order.customer.name}\n                </TableCell>\n                <TableCell>\n                  {format(order.createdAt, 'dd/MM/yyyy')}\n                </TableCell>\n                <TableCell>\n                  <SeverityPill\n                    color={(order.status === 'delivered' && 'success')\n                    || (order.status === 'refunded' && 'error')\n                    || 'warning'}\n                  >\n                    {order.status}\n                  </SeverityPill>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </Box>\n    </PerfectScrollbar> */}\n    <Box\n      sx={{\n        display: 'flex',\n        justifyContent: 'flex-end',\n        p: 2\n      }}\n    >\n      {/* <Button\n        color=\"primary\"\n        endIcon={<ArrowRightIcon fontSize=\"small\" />}\n        size=\"small\"\n        variant=\"text\"\n      >\n        View all\n      </Button> */}\n    </Box>\n  </Card>\n  );\n}; ","import { formatDistanceToNow, subHours } from 'date-fns';\nimport { v4 as uuid } from 'uuid';\nimport {\n  Box,\n  Button,\n  Card,\n  CardHeader,\n  Divider,\n  IconButton,\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemText\n} from '@mui/material';\nimport ArrowRightIcon from '@mui/icons-material/ArrowRight';\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\n\nconst products = [\n  {\n    id: uuid(),\n    name: 'Dropbox',\n    imageUrl: '/static/images/products/product_1.png',\n    updatedAt: subHours(Date.now(), 2)\n  },\n  {\n    id: uuid(),\n    name: 'Medium Corporation',\n    imageUrl: '/static/images/products/product_2.png',\n    updatedAt: subHours(Date.now(), 2)\n  },\n  {\n    id: uuid(),\n    name: 'Slack',\n    imageUrl: '/static/images/products/product_3.png',\n    updatedAt: subHours(Date.now(), 3)\n  },\n  {\n    id: uuid(),\n    name: 'Lyft',\n    imageUrl: '/static/images/products/product_4.png',\n    updatedAt: subHours(Date.now(), 5)\n  },\n  {\n    id: uuid(),\n    name: 'GitHub',\n    imageUrl: '/static/images/products/product_5.png',\n    updatedAt: subHours(Date.now(), 9)\n  }\n];\n\nexport const LatestProducts = (props) => (\n  <Card {...props}>\n    <CardHeader\n      subtitle={`${products.length} in total`}\n      title=\"Latest Products\"\n    />\n    <Divider />\n    <List>\n      {products.map((product, i) => (\n        <ListItem\n          divider={i < products.length - 1}\n          key={product.id}\n        >\n          <ListItemAvatar>\n            <img\n              alt={product.name}\n              src={product.imageUrl}\n              style={{\n                height: 48,\n                width: 48\n              }}\n            />\n          </ListItemAvatar>\n          <ListItemText\n            primary={product.name}\n            secondary={`Updated ${formatDistanceToNow(product.updatedAt)}`}\n          />\n          <IconButton\n            edge=\"end\"\n            size=\"small\"\n          >\n            <MoreVertIcon />\n          </IconButton>\n        </ListItem>\n      ))}\n    </List>\n    <Divider />\n    <Box\n      sx={{\n        display: 'flex',\n        justifyContent: 'flex-end',\n        p: 2\n      }}\n    >\n      <Button\n        color=\"primary\"\n        endIcon={<ArrowRightIcon />}\n        size=\"small\"\n        variant=\"text\"\n      >\n        View all\n      </Button>\n    </Box>\n  </Card>\n);","import { Bar } from 'react-chartjs-2';\nimport { useEffect, useState} from 'react';\nimport { Box, Button, Card, CardContent, CardHeader, Divider, useTheme } from '@mui/material';\nimport ArrowDropDownIcon from '@mui/icons-material/ArrowDropDown';\nimport ArrowRightIcon from '@mui/icons-material/ArrowRight';\nimport ReactEcharts from \"echarts-for-react\";\nimport { store } from \"../App\";\nimport { useAuth } from \"../contexts/AuthContext\";\n\n\n\nexport const HeartRateTimeSeries = (props) => {\n  const theme = useTheme();\n  const state = store.getState();\n  const [dateArray, setDateArray] = useState([]);\n  const [heartRateArray, setHeartRateArray] = useState([]);\n  const { timeSeriesData } = useAuth()\n  const heartrate = \"heartrate\"\n  const dateToday = new Date()\n  dateToday.setDate(dateToday.getDate() -1)\n  const [error, setError] = useState(\"\")\n\n  function myFunction() {\n    document.getElementById(\"myDropdown\").classList.toggle(\"show\");\n  }\n\n  function formatDate(date) {\n    var d = new Date(date),\n        month = '' + (d.getMonth() + 1),\n        day = '' + (d.getDate()),\n        year = d.getFullYear();\n    if (month.length < 2) \n        month = '0' + month;\n    if (day.length < 2) \n        day = '0' + day;\n\n    return [year, month, day].join('-');\n}\n\n    useEffect(() => {\n      const getData2 = async () => {\n        const response = await timeSeriesData(heartrate, \"2022-01-01\", formatDate(dateToday))\n        //const response = await timeSeriesData(heartrate, \"2021-01-01\", \"2021-12-30\")\n        console.log(response)\n        setDateArray([])\n        setHeartRateArray([])\n        for (var i = 0; i < response.data.length; i++) {\n          var heartrateVal = response.data[i].resting_heartrate;\n          var dateVal = response.data[i].date;\n          setDateArray(dateArray => [...dateArray, dateVal]);\n          setHeartRateArray(heartRateArray => [...heartRateArray, heartrateVal]);\n          // heartRateArray.push(heartrateVal)\n          // dateArray.push(dateVal)\n          // console.log(heartrateVal.resting_heartrate);\n        }\n        // console.log(dateArray)\n        // console.log(heartRateArray)\n      };\n      getData2();\n    }, []);\n\n\n  async function getData(e) {\n    e.preventDefault()\n  \n    try {\n        setError(\"\")\n        const response = await timeSeriesData(heartrate, \"2022-01-01\", formatDate(dateToday))\n        console.log(response)\n        for (var i = 0; i < response.data.length; i++) {\n          var heartrateVal = response.data[i].resting_heartrate;\n          var dateVal = response.data[i].date;\n          heartRateArray.push(heartrateVal)\n          dateArray.push(dateVal)\n          // console.log(heartrateVal.resting_heartrate);\n        }\n        // console.log(dataArray)\n        // console.log(dateArray)\n    }\n    catch {\n        setError(\"Can't get steps\")\n    }\n  }\n\n    async function lastYearRate(e) {\n      e.preventDefault()\n    \n      try {\n          setError(\"\")\n          const response = await timeSeriesData(heartrate, \"2021-01-01\", \"2021-12-30\")\n          console.log(response)\n          setDateArray([])\n          setHeartRateArray([])\n          for (var i = 0; i < response.data.length; i++) {\n            var heartrateVal = response.data[i].resting_heartrate;\n            var dateVal = response.data[i].date;\n            setDateArray(dateArray => [...dateArray, dateVal]);\n            setHeartRateArray(heartRateArray => [...heartRateArray, heartrateVal]);\n            // heartRateArray.push(heartrateVal)\n            // dateArray.push(dateVal)\n            // console.log(heartrateVal.resting_heartrate);\n          }\n          // console.log(dataArray)\n          // console.log(dateArray)\n      }\n      catch {\n          setError(\"Can't get steps\")\n      }\n  \n  }\n\n  return (\n    <Card {...props}>\n      <CardHeader\n        action={(\n          // <Button\n          //   endIcon={<ArrowDropDownIcon fontSize=\"small\" />}\n          //   size=\"small\"\n\n          // >\n          //   Year\n          // </Button>\n\n          <div>\n          <Button\n            endIcon={<ArrowDropDownIcon fontSize=\"small\" />}\n            size=\"small\"\n          >\n            Year\n          </Button>\n          <div>\n              <Button onClick={lastYearRate} size = \"small\">2021</Button>\n          </div>\n          </div>\n\n          // <div class=\"dropdown\">\n          // <Button endIcon={<ArrowDropDownIcon fontSize=\"small\" />} size = \"small\" onclick= {myFunction} class=\"dropbtn\">Year</Button>\n          // <div id=\"myDropdown\" class=\"dropdown-content hide\">\n          // <Button size = \"small\" onclick={lastYearRate}>2021</Button>\n          // </div>\n          // </div>\n        )}\n        title=\"Resting Heart Rate\"\n      />\n      <Divider />\n      <CardContent>\n        {/* <Box\n          sx={{\n            height: 400,\n            position: 'relative'\n          }}\n        >\n          <Bar\n            data={data}\n            options={options}\n          />\n        </Box> */}\n        <ReactEcharts\n      option={{\n        title: {\n          text: `${state.storeAccess[0].data.username} Resting Heart Rate`,\n        },\n        tooltip: {\n          trigger: 'axis',\n          axisPointer: {\n            type: 'shadow'\n          }\n        },\n        dataZoom: [\n          {\n            type: 'slider',\n            show: true,\n            xAxisIndex: [0],\n            start: 98,\n            end: 100\n          },\n        ],\n        toolbox: {\n          show: true,\n          feature: {\n            dataView: { readOnly: false },\n            restore: {},\n            saveAsImage: {}\n          }\n        },\n        xAxis: {\n          type: 'category',\n          // data: ['2021-10-09', '2021-10-10', '2021-10-11', '2021-10-12', '2021-10-13', '2021-10-14', '2021-10-15', '2021-10-16', '2021-10-17', '2021-10-18', '2021-10-19', '2021-10-20', '2021-10-21', '2021-10-22', '2021-10-23', '2021-10-24', '2021-10-25', '2021-10-26', '2021-10-27', '2021-10-28', '2021-10-29', '2021-10-30', '2021-10-31', '2021-11-01', '2021-11-02', '2021-11-03', '2021-11-04', '2021-11-05', '2021-11-06', '2021-11-07', '2021-11-08', '2021-11-09', '2021-11-10', '2021-11-11', '2021-11-12', '2021-11-13', '2021-11-14', '2021-11-15', '2021-11-16', '2021-11-17', '2021-11-18', '2021-11-19', '2021-11-20', '2021-11-21', '2021-11-22', '2021-11-23', '2021-11-24', '2021-11-25', '2021-11-26' ]\n          data: dateArray\n        },\n        yAxis: {\n          type: 'value', \n          axisLabel: {\n            formatter: '{value} bpm'\n          },\n        },\n        series: [\n          {\n            data: heartRateArray,\n            // data: [80, 80, 79, 78, 79, 80, 82, 83, 81, 81, 81, 79, 79, 78, 79, 81, 83, 84, 85, 85, 86, 85, 82, 84, 83, 82, 83, 83, 85, 83, 81, 81, 80, 81, 81, 82, 81, 79, 78, 81, 80, 79, 81, 82, 84, 83, 83, 83, 83],\n            type: 'line'\n          }\n        ]\n        }}\n      />\n      </CardContent>\n      <Divider />\n      <Box\n        sx={{\n          display: 'flex',\n          justifyContent: 'flex-end',\n          p: 2\n        }}\n      >\n        {/* <Button\n          color=\"primary\"\n          endIcon={<ArrowRightIcon fontSize=\"small\" />}\n          size=\"small\"\n        >\n          More Health Metrics\n        </Button> */}\n      </Box>\n    </Card>\n  );\n};\n","import React, { useRef, useState, useEffect } from \"react\"\nimport { Avatar, Box, Card, CardContent, Grid, LinearProgress, Typography, Button } from '@mui/material';\nimport InsertChartIcon from '@mui/icons-material/InsertChartOutlined';\nimport NightsStayIcon from '@mui/icons-material/NightsStay';\nimport { useAuth } from \"../contexts/AuthContext\";\n\nexport const SleepIntraday = (props) => {\n  const dateToday = new Date()\n  dateToday.setDate(dateToday.getDate() -1)\n  const startDate = new Date()\n  startDate.setDate(startDate.getDate() - 2)\n  const [error, setError] = useState(\"\")\n  const { timeSeriesData } = useAuth()\n  const sleep = \"sleep\"\n  const [efficiencyVal, setEfficiencyVal]= useState(\"\")\n\n  function formatDate(date) {\n    var d = new Date(date),\n        month = '' + (d.getMonth() + 1),\n        day = '' + (d.getDate()),\n        year = d.getFullYear();\n    if (month.length < 2) \n        month = '0' + month;\n    if (day.length < 2) \n        day = '0' + day;\n\n    return [year, month, day].join('-');\n}\n\nuseEffect(() => {\n  const getEfficiency2 = async () => {\n    const response = await timeSeriesData(sleep, formatDate(startDate), formatDate(dateToday))\n           console.log(response)\n           if (response.status_code === 200 ){\n              console.log(response.data[0].efficiency)\n              setEfficiencyVal(response.data[0].efficiency)  \n           } else {\n             setEfficiencyVal(\"N/A\")\n           }\n  };\n  getEfficiency2();\n}, []);\n\n  async function getEfficiency(e) {\n    e.preventDefault()\n  \n       try {\n           setError(\"\")\n           const response = await timeSeriesData(sleep, formatDate(startDate), formatDate(dateToday))\n           console.log(response)\n           console.log(response.data[1].efficiency)\n           setEfficiencyVal(response.data[1].efficiency)\n           if (response.status_code === 200 ){\n              setEfficiencyVal(response.data[1].efficiency)  \n           }\n       }\n       catch {\n           setError(\"Can't get steps\")\n       }\n  \n     }\n\n  return (\n    <Card\n    sx={{ height: '100%' }}\n    {...props}\n  >\n    <CardContent>\n      <Grid\n        container\n        spacing={3}\n        sx={{ justifyContent: 'space-between' }}\n      >\n        <Grid item>\n          <Typography\n            color=\"textSecondary\"\n            gutterBottom\n            variant=\"overline\"\n          >\n            Sleep Efficiency\n            {/* <Button onClick = {getEfficiency}>HEY</Button> */}\n            {/* {efficiencyVal} */}\n          </Typography>\n          <Typography\n            color=\"textPrimary\"\n            variant=\"h4\"\n          >\n            {efficiencyVal}%\n          </Typography>\n        </Grid>\n        <Grid item>\n          <Avatar\n            sx={{\n              backgroundColor: 'warning.main',\n              height: 56,\n              width: 56\n            }}\n          >\n            <NightsStayIcon />\n          </Avatar>\n        </Grid>\n      </Grid>\n      <Box sx={{ pt: 3 }}>\n        <LinearProgress\n          value={efficiencyVal}\n          variant=\"determinate\"\n        />\n      </Box>\n    </CardContent>\n  </Card>\n  );\n};","import React, { useRef, useState, useEffect } from \"react\"\nimport { Avatar, Box, Card, CardContent, Grid, Typography, Button } from '@mui/material';\nimport ArrowUpwardIcon from '@mui/icons-material/ArrowUpward';\nimport PeopleIcon from '@mui/icons-material/PeopleOutlined';\nimport LocalFireDepartmentIcon from '@mui/icons-material/LocalFireDepartment';\nimport { useAuth } from \"../contexts/AuthContext\";\n\nexport const CaloriesIntraday = (props) => {\n  const [error, setError] = useState(\"\")\n  const [success, setSuccess] = useState(\"\")\n  const { intradayData } = useAuth()\n  const heartrate = \"heartrate\"\n  const dateToday = new Date()\n  dateToday.setDate(dateToday.getDate() -1)\n  const [caloriesVal, setCaloriesVal]= useState(\"\")\n  var caloriesTotal = 0\n\n  function formatDate(date) {\n    var d = new Date(date),\n        month = '' + (d.getMonth() + 1),\n        day = '' + (d.getDate()),\n        year = d.getFullYear();\n    if (month.length < 2) \n        month = '0' + month;\n    if (day.length < 2) \n        day = '0' + day;\n\n    return [year, month, day].join('-');\n}\n\nuseEffect(() => {\n  const getCalories2 = async () => {\n    const response = await intradayData(heartrate, formatDate(dateToday))\n        if(response.status_code === 200){\n          console.log(response)\n\n         for (var i = 0; i < response.data.time_series.heartrate_zones.length; i++) {\n          caloriesTotal += response.data.time_series.heartrate_zones[i].caloriesOut\n        }\n        console.log(caloriesTotal)\n        setCaloriesVal(Math.round(caloriesTotal))\n\n        }\n        else{\n          setCaloriesVal(\"N/A\")\n        }\n  };\n  getCalories2();\n}, []); \n\n// async function getCalories(e) {\n//     e.preventDefault()\n  \n//      try {\n//          setError(\"\")\n//          const response = await intradayData(heartrate, formatDate(dateToday))\n//          console.log(response)\n\n//          for (var i = 0; i < response.data.time_series.heartrate_zones.length; i++) {\n//           caloriesTotal += response.data.time_series.heartrate_zones[i].caloriesOut\n//         }\n//         console.log(caloriesTotal)\n//         setCaloriesVal(Math.trunc(caloriesTotal))\n//      }\n//      catch {\n//          setError(\"Can't get steps\")\n//      }\n  \n//    }\n\n  return(\n    <Card\n    sx={{ height: '100%' }} \n    {...props}>\n    <CardContent>\n      <Grid\n        container\n        spacing={3}\n        sx={{ justifyContent: 'space-between' }}\n      >\n        <Grid item>\n          <Typography\n            color=\"textSecondary\"\n            gutterBottom\n            variant=\"overline\"\n          >\n            Calories Burned\n          </Typography>\n          <Typography\n            color=\"textPrimary\"\n            variant=\"h4\"\n          >\n            {/* 1,906 */}\n            {/* <Button onClick = {getCalories}>HEY</Button> */}\n            {caloriesVal}\n          </Typography>\n        </Grid>\n        <Grid item>\n          <Avatar\n            sx={{\n              backgroundColor: 'success.main',\n              height: 56,\n              width: 56\n            }}\n          >\n            <LocalFireDepartmentIcon />\n          </Avatar>\n        </Grid>\n      </Grid>\n      <Box\n        sx={{\n          alignItems: 'center',\n          display: 'flex',\n          pt: 2\n        }}\n      >\n        {/* <ArrowUpwardIcon color=\"success\" />\n        <Typography\n          variant=\"body2\"\n          sx={{\n            mr: 1\n          }}\n        >\n          16%\n        </Typography>\n        <Typography\n          color=\"textSecondary\"\n          variant=\"caption\"\n        >\n          Since yesterday\n        </Typography> */}\n      </Box>\n    </CardContent>\n  </Card>\n\n  );\n};","import React, { useRef, useState, useEffect } from \"react\"\nimport { Avatar, Card, CardContent, Grid, Typography, Button } from '@mui/material';\nimport AttachMoneyIcon from '@mui/icons-material/AttachMoney';\nimport FmdGoodIcon from '@mui/icons-material/FmdGood';\nimport FavoriteIcon from '@mui/icons-material/Favorite';\nimport { useAuth } from \"../contexts/AuthContext\";\n\nexport const HeartRateIntraday = (props) => {\n  const dateToday = new Date()\n  dateToday.setDate(dateToday.getDate() -1)\n  const startDate = new Date()\n  startDate.setDate(startDate.getDate() - 2)\n  const [error, setError] = useState(\"\")\n  const { timeSeriesData, intradayData } = useAuth()\n  const steps = \"step\"\n  const heartrate = \"heartrate\"\n  const [heartrateVal, setHeartRateVal]= useState(\"\")\n\n  function formatDate(date) {\n    var d = new Date(date),\n        month = '' + (d.getMonth() + 1),\n        day = '' + (d.getDate()),\n        year = d.getFullYear();\n    if (month.length < 2) \n        month = '0' + month;\n    if (day.length < 2) \n        day = '0' + day;\n\n    return [year, month, day].join('-');\n}\n\nuseEffect(() => {\n  const getHeartRate = async () => {\n    const response = await intradayData(heartrate, formatDate(dateToday))\n    console.log(response)\n    if (response.status_code === 200){\n      setHeartRateVal(response.data.time_series.resting_heartrate)\n    }\n    else {\n      setHeartRateVal(\"N/A\")\n    }\n  };\n  getHeartRate();\n}, []); \n\n\n\n  return (\n    <Card {...props}>\n    <CardContent>\n      <Grid\n        container\n        spacing={3}\n        sx={{ justifyContent: 'space-between' }}\n      >\n        <Grid item>\n          <Typography\n            color=\"textSecondary\"\n            gutterBottom\n            variant=\"overline\"\n          >\n            Resting Heart Rate\n            {/* <Button onClick = {getDistance}>HEY</Button> */}\n          </Typography>\n          <Typography\n            color=\"textPrimary\"\n            variant=\"h4\"\n          >\n            {/* 1.67 Km */}\n            {heartrateVal} bpm\n          </Typography>\n        </Grid>\n        <Grid item>\n          <Avatar\n            sx={{\n              backgroundColor: 'primary.main',\n              height: 56,\n              width: 56\n            }}\n          >\n            <FavoriteIcon />\n          </Avatar>\n        </Grid>\n      </Grid>\n    </CardContent>\n  </Card>\n\n  );\n};","import React, { useRef, useState, useEffect } from \"react\"\nimport { Doughnut } from 'react-chartjs-2';\nimport { Box, Card, CardContent, CardHeader, Divider, Typography, useTheme } from '@mui/material';\nimport LaptopMacIcon from '@mui/icons-material/LaptopMac';\nimport PhoneIcon from '@mui/icons-material/Phone';\nimport TabletIcon from '@mui/icons-material/Tablet';\nimport ReactEcharts from \"echarts-for-react\";\nimport AlarmIcon from '@mui/icons-material/Alarm';\nimport NotificationsPausedIcon from '@mui/icons-material/NotificationsPaused';\nimport { useAuth } from \"../contexts/AuthContext\";\n\nexport const SleepEfficiency = (props) => {\n  const theme = useTheme();\n  const dateToday = new Date()\n  dateToday.setDate(dateToday.getDate() -1)\n  const startDate = new Date()\n  startDate.setDate(startDate.getDate() - 2)\n  const [error, setError] = useState(\"\")\n  const { timeSeriesData } = useAuth()\n  const sleep = \"sleep\"\n  const [efficiencyVal2, setEfficiencyVal2]= useState(\"\")\n  const [awakeVal, setAwakeVal]= useState(\"\")\n  const [deepVal, setDeepVal]= useState(\"\")\n  const [lightVal, setLightVal]= useState(\"\")\n\n  function formatDate(date) {\n    var d = new Date(date),\n        month = '' + (d.getMonth() + 1),\n        day = '' + (d.getDate()),\n        year = d.getFullYear();\n    if (month.length < 2) \n        month = '0' + month;\n    if (day.length < 2) \n        day = '0' + day;\n\n    return [year, month, day].join('-');\n}\n\nuseEffect(() => {\n  const getEfficiency = async () => {\n    const response = await timeSeriesData(sleep, formatDate(startDate), formatDate(dateToday))\n           console.log(response)\n          //  console.log(response.data[0].summary)\n           if (response.status_code === 200 ){\n              setEfficiencyVal2(response.data[0].efficiency)\n              const awakeValue = ((response.data[0].summary.wake.minutes *1.0/ response.data[0].time_in_bed) * 100).toPrecision(2)\n              const deepValue = ((response.data[0].summary.light.minutes *1.0/ response.data[0].time_in_bed) * 100).toPrecision(2)\n              const lightValue = ((response.data[0].summary.deep.minutes *1.0/ response.data[0].time_in_bed) * 100).toPrecision(2)\n              setAwakeVal(awakeValue)  \n              setDeepVal(deepValue)\n              setLightVal(lightValue)\n           }\n          //  } else{\n          //   setAwakeVal(\"N/A\")  \n          //   setDeepVal(\"N/A\")\n          //   setLightVal(\"N/A\")\n          //  }\n  };\n  getEfficiency();\n}, []);\n\nconst gaugeData = [\n  {\n    value: efficiencyVal2,\n    name: 'Sleep Score',\n    title: {\n      offsetCenter: ['0%', '-20%']\n    },\n    detail: {\n      valueAnimation: true,\n      offsetCenter: ['0%', '10%']\n    }\n  },\n];\n\n  const options = {\n    animation: false,\n    cutoutPercentage: 80,\n    layout: { padding: 0 },\n    legend: {\n      display: false\n    },\n    maintainAspectRatio: false,\n    responsive: true,\n    tooltips: {\n      backgroundColor: theme.palette.background.paper,\n      bodyFontColor: theme.palette.text.secondary,\n      borderColor: theme.palette.divider,\n      borderWidth: 1,\n      enabled: true,\n      footerFontColor: theme.palette.text.secondary,\n      intersect: false,\n      mode: 'index',\n      titleFontColor: theme.palette.text.primary\n    }\n  };\n\n  const devices = [\n    {\n      title: 'Awake',\n      // value: 23,\n      value: awakeVal,\n      icon: AlarmIcon,\n      color: '#3F51B5'\n    },\n    {\n      title: 'Light',\n      // value: 15,\n      value: lightVal,\n      icon: TabletIcon,\n      // color: '#E53935'\n      color: '#3F51B5'\n    },\n    {\n      title: 'Deep',\n      // value: 63,\n      value: deepVal,\n      icon: NotificationsPausedIcon,\n      // color: '#FB8C00'\n      color: '#3F51B5'\n    }\n  ];\n\n  return (\n    <Card {...props}>\n    <CardHeader subheader= {formatDate(dateToday)} title= \"Sleep Score\"/>\n      <Divider />\n      <CardContent>\n        {/* <Box\n          sx={{\n            height: 300,\n            position: 'relative'\n          }}\n        >\n          <Doughnut\n            data={data}\n            options={options}\n          />\n        </Box> */}\n        <ReactEcharts\n        option = {{\n          series: [\n            {\n              type: 'gauge',\n              startAngle: 90,\n              endAngle: -270,\n              pointer: {\n                show: false\n              },\n              progress: {\n                show: true,\n                overlap: false,\n                roundCap: true,\n                clip: false,\n                itemStyle: {\n                  borderWidth: 1,\n                  borderColor: '#464646'\n                }\n              },\n              axisLine: {\n                lineStyle: {\n                  width: 10\n                }\n              },\n              splitLine: {\n                show: false,\n                distance: 0,\n                length: 10\n              },\n              axisTick: {\n                show: false\n              },\n              axisLabel: {\n                show: false,\n                distance: 50\n              },\n              data: gaugeData,\n              title: {\n                fontSize: 14\n              },\n              detail: {\n                width: 50,\n                height: 14,\n                fontSize: 14,\n                color: 'auto',\n                borderColor: 'auto',\n                borderRadius: 20,\n                borderWidth: 1,\n                formatter: '{value}%'\n              }\n            }\n          ]\n        }}\n      // option={{\n      //   tooltip: {\n      //     formatter: '{a} <br/>{b} : {c}%',\n      //   },\n      //   series: [\n      //     {\n      //       name: 'Rating',\n      //       type: 'gauge',\n      //       detail: {\n      //         formatter: '{value}'\n      //       },\n      //       data: [\n      //         {\n      //           // value: 75.5,\n      //           value: efficiencyVal2,\n      //           name: 'Sleep Rating'\n      //         }\n      //       ]\n      //     }\n      //   ]\n      //   }}\n      />\n        <Box\n          sx={{\n            display: 'flex',\n            justifyContent: 'center',\n            pt: 2\n          }}\n        >\n          {devices.map(({\n            color,\n            icon: Icon,\n            title,\n            value\n          }) => (\n            <Box\n              key={title}\n              sx={{\n                p: 1,\n                textAlign: 'center'\n              }}\n            >\n              <Icon color=\"action\" />\n              <Typography\n                color=\"textPrimary\"\n                variant=\"body1\"\n              >\n                {title}\n              </Typography>\n              <Typography\n                style={{ color }}\n                variant=\"h4\"\n              >\n                {value}\n                %\n              </Typography>\n            </Box>\n          ))}\n        </Box>\n      </CardContent>\n    </Card>\n  );\n};","import { createSvgIcon } from '@mui/material/utils';\n\nexport const Bell = createSvgIcon(\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 20 20\"\n    fill=\"currentColor\"\n  >\n    <path d=\"M10 2a6 6 0 00-6 6v3.586l-.707.707A1 1 0 004 14h12a1 1 0 00.707-1.707L16 11.586V8a6 6 0 00-6-6zM10 18a3 3 0 01-3-3h6a3 3 0 01-3 3z\" />\n  </svg>,\n  'Bell'\n);\n","import { createSvgIcon } from '@mui/material/utils';\n\nexport const UserCircle = createSvgIcon(\n  <svg\n    viewBox=\"0 0 20 20\"\n    fill=\"currentColor\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path\n      fillRule=\"evenodd\"\n      clipRule=\"evenodd\"\n      d=\"M19.5999 9.99999C19.5999 12.5461 18.5885 14.9879 16.7881 16.7882C14.9878 18.5886 12.546 19.6 9.9999 19.6C7.45382 19.6 5.01203 18.5886 3.21168 16.7882C1.41133 14.9879 0.399902 12.5461 0.399902 9.99999C0.399902 7.45392 1.41133 5.01212 3.21168 3.21177C5.01203 1.41142 7.45382 0.399994 9.9999 0.399994C12.546 0.399994 14.9878 1.41142 16.7881 3.21177C18.5885 5.01212 19.5999 7.45392 19.5999 9.99999ZM12.3999 6.39999C12.3999 7.03651 12.147 7.64696 11.697 8.09705C11.2469 8.54714 10.6364 8.79999 9.9999 8.79999C9.36338 8.79999 8.75293 8.54714 8.30285 8.09705C7.85276 7.64696 7.5999 7.03651 7.5999 6.39999C7.5999 5.76347 7.85276 5.15302 8.30285 4.70294C8.75293 4.25285 9.36338 3.99999 9.9999 3.99999C10.6364 3.99999 11.2469 4.25285 11.697 4.70294C12.147 5.15302 12.3999 5.76347 12.3999 6.39999ZM9.9999 11.2C8.85102 11.1998 7.72623 11.5294 6.7592 12.1497C5.79217 12.77 5.02355 13.6549 4.5447 14.6992C5.21991 15.4847 6.05703 16.1149 6.99864 16.5466C7.94024 16.9782 8.96407 17.2011 9.9999 17.2C11.0357 17.2011 12.0596 16.9782 13.0012 16.5466C13.9428 16.1149 14.7799 15.4847 15.4551 14.6992C14.9762 13.6549 14.2076 12.77 13.2406 12.1497C12.2736 11.5294 11.1488 11.1998 9.9999 11.2Z\"\n    />\n  </svg>,\n  'UserCircle'\n);\n","import { createSvgIcon } from '@mui/material/utils';\n\nexport const Users = createSvgIcon(\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 20 20\"\n    fill=\"currentColor\"\n  >\n    <path\n      d=\"M9 6a3 3 0 11-6 0 3 3 0 016 0zM17 6a3 3 0 11-6 0 3 3 0 016 0zM12.93 17c.046-.327.07-.66.07-1a6.97 6.97 0 00-1.5-4.33A5 5 0 0119 16v1h-6.07zM6 11a5 5 0 015 5v1H1v-1a5 5 0 015-5z\"\n    />\n  </svg>,\n  'Users'\n);\n","import PropTypes from 'prop-types';\nimport styled from '@emotion/styled';\nimport { AppBar, Avatar, Badge, Box, IconButton, Toolbar, Tooltip } from '@mui/material';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport SearchIcon from '@mui/icons-material/Search';\nimport { Bell as BellIcon } from './icons/bell';\nimport { UserCircle as UserCircleIcon } from './icons/user-circle';\nimport { Users as UsersIcon } from './icons/users';\n\nconst DashboardNavbarRoot = styled(AppBar)(({ theme }) => ({\n  backgroundColor: theme.palette.background.paper,\n  boxShadow: theme.shadows[3]\n}));\n\nexport const DashboardNavbar = (props) => {\n  const { onSidebarOpen, ...other } = props;\n\n  return (\n    <>\n      <DashboardNavbarRoot\n        sx={{\n          left: {\n            lg: 280\n          },\n          width: {\n            lg: 'calc(100% - 280px)'\n          }\n        }}\n        {...other}>\n        <Toolbar\n          disableGutters\n          sx={{\n            minHeight: 64,\n            left: 0,\n            px: 2\n          }}\n        >\n          <IconButton\n            onClick={onSidebarOpen}\n            sx={{\n              display: {\n                xs: 'inline-flex',\n                lg: 'none'\n              }\n            }}\n          >\n            <MenuIcon fontSize=\"small\" />\n          </IconButton>\n          <Tooltip title=\"Search\">\n            <IconButton sx={{ ml: 1 }}>\n              <SearchIcon fontSize=\"small\" />\n            </IconButton>\n          </Tooltip>\n          <Box sx={{ flexGrow: 1 }} />\n          <Tooltip title=\"Contacts\">\n            <IconButton sx={{ ml: 1 }}>\n              <UsersIcon fontSize=\"small\" />\n            </IconButton>\n          </Tooltip>\n          <Tooltip title=\"Notifications\">\n            <IconButton sx={{ ml: 1 }}>\n              <Badge\n                badgeContent={4}\n                color=\"primary\"\n                variant=\"dot\"\n              >\n                <BellIcon fontSize=\"small\" />\n              </Badge>\n            </IconButton>\n          </Tooltip>\n          <Avatar\n            sx={{\n              height: 40,\n              width: 40,\n              ml: 1\n            }}\n            src=\"/static/images/avatars/avatar_1.png\"\n          >\n            <UserCircleIcon fontSize=\"small\" />\n          </Avatar>\n        </Toolbar>\n      </DashboardNavbarRoot>\n    </>\n  );\n};\n\nDashboardNavbar.propTypes = {\n  onSidebarOpen: PropTypes.func\n};","import { createSvgIcon } from '@mui/material/utils';\n\nexport const ChartBar = createSvgIcon(\n  <svg\n    viewBox=\"0 0 20 18\"\n    fill=\"currentColor\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path\n      d=\"M0.399902 10.2C0.399902 9.88175 0.52633 9.57652 0.751374 9.35148C0.976418 9.12644 1.28164 9.00001 1.5999 9.00001H3.9999C4.31816 9.00001 4.62339 9.12644 4.84843 9.35148C5.07347 9.57652 5.1999 9.88175 5.1999 10.2V16.2C5.1999 16.5183 5.07347 16.8235 4.84843 17.0485C4.62339 17.2736 4.31816 17.4 3.9999 17.4H1.5999C1.28164 17.4 0.976418 17.2736 0.751374 17.0485C0.52633 16.8235 0.399902 16.5183 0.399902 16.2V10.2ZM7.5999 5.40001C7.5999 5.08175 7.72633 4.77652 7.95137 4.55148C8.17642 4.32643 8.48164 4.20001 8.7999 4.20001H11.1999C11.5182 4.20001 11.8234 4.32643 12.0484 4.55148C12.2735 4.77652 12.3999 5.08175 12.3999 5.40001V16.2C12.3999 16.5183 12.2735 16.8235 12.0484 17.0485C11.8234 17.2736 11.5182 17.4 11.1999 17.4H8.7999C8.48164 17.4 8.17642 17.2736 7.95137 17.0485C7.72633 16.8235 7.5999 16.5183 7.5999 16.2V5.40001ZM14.7999 1.80001C14.7999 1.48175 14.9263 1.17652 15.1514 0.951478C15.3764 0.726434 15.6816 0.600006 15.9999 0.600006H18.3999C18.7182 0.600006 19.0234 0.726434 19.2484 0.951478C19.4735 1.17652 19.5999 1.48175 19.5999 1.80001V16.2C19.5999 16.5183 19.4735 16.8235 19.2484 17.0485C19.0234 17.2736 18.7182 17.4 18.3999 17.4H15.9999C15.6816 17.4 15.3764 17.2736 15.1514 17.0485C14.9263 16.8235 14.7999 16.5183 14.7999 16.2V1.80001Z\"\n    />\n  </svg>,\n  'ChartBar'\n);\n","import { createSvgIcon } from '@mui/material/utils';\n\nexport const Cog = createSvgIcon(\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 20 20\"\n    fill=\"currentColor\"\n  >\n    <path\n      fillRule=\"evenodd\"\n      d=\"M11.49 3.17c-.38-1.56-2.6-1.56-2.98 0a1.532 1.532 0 01-2.286.948c-1.372-.836-2.942.734-2.106 2.106.54.886.061 2.042-.947 2.287-1.561.379-1.561 2.6 0 2.978a1.532 1.532 0 01.947 2.287c-.836 1.372.734 2.942 2.106 2.106a1.532 1.532 0 012.287.947c.379 1.561 2.6 1.561 2.978 0a1.533 1.533 0 012.287-.947c1.372.836 2.942-.734 2.106-2.106a1.533 1.533 0 01.947-2.287c1.561-.379 1.561-2.6 0-2.978a1.532 1.532 0 01-.947-2.287c.836-1.372-.734-2.942-2.106-2.106a1.532 1.532 0 01-2.287-.947zM10 13a3 3 0 100-6 3 3 0 000 6z\"\n      clipRule=\"evenodd\"\n    />\n  </svg>,\n  'Cog'\n);\n","import { createSvgIcon } from '@mui/material/utils';\n\nexport const User = createSvgIcon(\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 20 20\"\n    fill=\"currentColor\"\n  >\n    <path\n      fillRule=\"evenodd\"\n      d=\"M10 9a3 3 0 100-6 3 3 0 000 6zm-7 9a7 7 0 1114 0H3z\"\n      clipRule=\"evenodd\"\n    />\n  </svg>,\n  'User'\n);\n","import { createSvgIcon } from '@mui/material/utils';\n\nexport const Lock = createSvgIcon(\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 20 20\"\n    fill=\"currentColor\"\n  >\n    <path\n      fillRule=\"evenodd\"\n      d=\"M5 9V7a5 5 0 0110 0v2a2 2 0 012 2v5a2 2 0 01-2 2H5a2 2 0 01-2-2v-5a2 2 0 012-2zm8-2v2H7V7a3 3 0 016 0z\"\n      clipRule=\"evenodd\"\n    />\n  </svg>,\n  'Lock'\n);\n","import { createSvgIcon } from '@mui/material/utils';\n\nexport const Selector = createSvgIcon(\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 8 14\"\n    fill=\"currentColor\"\n  >\n    <path\n      fillRule=\"evenodd\"\n      clipRule=\"evenodd\"\n      d=\"M4 0C4.26519 5.66374e-05 4.51951 0.105451 4.707 0.293L7.707 3.293C7.88916 3.4816 7.98995 3.7342 7.98767 3.9964C7.9854 4.2586 7.88023 4.50941 7.69482 4.69482C7.50941 4.88023 7.2586 4.9854 6.9964 4.98767C6.7342 4.98995 6.4816 4.88916 6.293 4.707L4 2.414L1.707 4.707C1.5184 4.88916 1.2658 4.98995 1.0036 4.98767C0.741402 4.9854 0.49059 4.88023 0.305182 4.69482C0.119773 4.50941 0.0146042 4.2586 0.0123258 3.9964C0.0100473 3.7342 0.110842 3.4816 0.293 3.293L3.293 0.293C3.48049 0.105451 3.73481 5.66374e-05 4 0ZM0.293 9.293C0.480528 9.10553 0.734836 9.00021 1 9.00021C1.26516 9.00021 1.51947 9.10553 1.707 9.293L4 11.586L6.293 9.293C6.4816 9.11084 6.7342 9.01005 6.9964 9.01233C7.2586 9.0146 7.50941 9.11977 7.69482 9.30518C7.88023 9.49059 7.9854 9.7414 7.98767 10.0036C7.98995 10.2658 7.88916 10.5184 7.707 10.707L4.707 13.707C4.51947 13.8945 4.26516 13.9998 4 13.9998C3.73484 13.9998 3.48053 13.8945 3.293 13.707L0.293 10.707C0.105529 10.5195 0.000213623 10.2652 0.000213623 10C0.000213623 9.73484 0.105529 9.48053 0.293 9.293Z\"\n    />\n  </svg>,\n  'ChartSquareBar'\n);\n","import { createSvgIcon } from '@mui/material/utils';\n\nexport const ShoppingBag = createSvgIcon(\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 20 20\"\n    fill=\"currentColor\"\n  >\n    <path\n      fillRule=\"evenodd\"\n      d=\"M10 2a4 4 0 00-4 4v1H5a1 1 0 00-.994.89l-1 9A1 1 0 004 18h12a1 1 0 00.994-1.11l-1-9A1 1 0 0015 7h-1V6a4 4 0 00-4-4zm2 5V6a2 2 0 10-4 0v1h4zm-6 3a1 1 0 112 0 1 1 0 01-2 0zm7-1a1 1 0 100 2 1 1 0 000-2z\"\n      clipRule=\"evenodd\"\n    />\n  </svg>,\n  'ShoppingBag'\n);\n","import { createSvgIcon } from '@mui/material/utils';\n\nexport const XCircle = createSvgIcon(\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 20 20\"\n    fill=\"currentColor\"\n  >\n    <path\n      fillRule=\"evenodd\"\n      d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z\"\n      clipRule=\"evenodd\"\n    />\n  </svg>,\n  'XCircle'\n);\n","import { createSvgIcon } from '@mui/material/utils';\n\nexport const UserAdd = createSvgIcon(\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 20 20\"\n    fill=\"currentColor\"\n  >\n    <path\n      d=\"M8 9a3 3 0 100-6 3 3 0 000 6zM8 11a6 6 0 016 6H2a6 6 0 016-6zM16 7a1 1 0 10-2 0v1h-1a1 1 0 100 2h1v1a1 1 0 102 0v-1h1a1 1 0 100-2h-1V7z\"\n    />\n  </svg>,\n  'UserAdd'\n);\n","import PropTypes from 'prop-types';\nimport { styled } from '@mui/material/styles';\n\nexport const Logo = styled((props) => {\n  const { variant, ...other } = props;\n\n  const color = variant === 'light' ? '#C1C4D6' : '#5048E5';\n\n  return (\n    <svg\n      width=\"42\"\n      height=\"42\"\n      viewBox=\"0 0 42 42\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      {...other}>\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M22.6744 4.50247L31.9038 9.66459C32.117 9.78381 32.2944 9.95738 32.4178 10.1674C32.5413 10.3775 32.6064 10.6164 32.6064 10.8597C32.6064 11.1031 32.5413 11.342 32.4178 11.5521C32.2944 11.7621 32.117 11.9357 31.9038 12.0549L22.6745 17.2172C22.0854 17.5467 21.4212 17.7198 20.7456 17.7198C20.0698 17.7198 19.4056 17.5467 18.8166 17.2172L9.5873 12.0549C9.37415 11.9357 9.1967 11.7621 9.0732 11.5521C8.94971 11.342 8.8846 11.1031 8.8846 10.8597C8.8846 10.6164 8.94971 10.3775 9.0732 10.1674C9.1967 9.95738 9.37415 9.78381 9.5873 9.66459L18.8166 4.50247C19.4056 4.17301 20.0698 4 20.7456 4C21.4212 4 22.0854 4.17301 22.6744 4.50247Z\"\n        fill={color}\n      />\n      <path\n        opacity=\"0.7\"\n        d=\"M22.6244 9.34853L35.8422 16.7415C36.0554 16.8607 36.2328 17.0343 36.3563 17.2443C36.4798 17.4544 36.5449 17.6933 36.5449 17.9366C36.5449 18.18 36.4798 18.419 36.3563 18.629C36.2328 18.8391 36.0554 19.0126 35.8422 19.1319L22.6244 26.5248C22.0355 26.8541 21.3712 27.0272 20.6956 27.0272C20.0199 27.0272 19.3557 26.8541 18.7667 26.5248L5.54893 19.1319C5.33578 19.0126 5.15833 18.8391 5.03483 18.629C4.91133 18.419 4.84623 18.18 4.84623 17.9366C4.84623 17.6933 4.91133 17.4544 5.03483 17.2443C5.15833 17.0343 5.33578 16.8607 5.54893 16.7415L18.7667 9.34853C19.3557 9.01916 20.0199 8.84615 20.6956 8.84615C21.3712 8.84615 22.0355 9.01916 22.6244 9.34853Z\"\n        fill={color}\n      />\n      <path\n        opacity=\"0.4\"\n        d=\"M22.9257 14.1939L41.2984 24.4703C41.5113 24.5894 41.6884 24.7626 41.8117 24.9724C41.935 25.182 42 25.4206 42 25.6636C42 25.9065 41.935 26.1451 41.8117 26.3548C41.6884 26.5645 41.5113 26.7378 41.2984 26.8568L22.9257 37.1329C22.3377 37.4618 21.6745 37.6346 21 37.6346C20.3254 37.6346 19.6623 37.4618 19.0743 37.1329L0.701542 26.8568C0.488743 26.7378 0.311581 26.5645 0.188286 26.3548C0.0649948 26.1451 0 25.9065 0 25.6636C0 25.4206 0.0649948 25.182 0.188286 24.9724C0.311581 24.7626 0.488743 24.5894 0.701542 24.4703L19.0743 14.1939C19.6623 13.8651 20.3254 13.6923 21 13.6923C21.6745 13.6923 22.3377 13.8651 22.9257 14.1939Z\"\n        fill={color}\n      />\n    </svg>\n  );\n})``;\n\nLogo.defaultProps = {\n  variant: 'primary'\n};\n\nLogo.propTypes = {\n  variant: PropTypes.oneOf(['light', 'primary'])\n};\n","import NextLink from 'next/link';\nimport { useRouter } from 'next/router';\nimport PropTypes from 'prop-types';\nimport { Box, Button, ListItem } from '@mui/material';\n\nexport const NavItem = (props) => {\n  const { href, icon, title, ...others } = props;\n  const router = useRouter();\n  const active = href ? (router.pathname === href) : false;\n\n  return (\n    <ListItem\n      disableGutters\n      sx={{\n        display: 'flex',\n        mb: 0.5,\n        py: 0,\n        px: 2\n      }}\n      {...others}\n    >\n      <NextLink\n        href={href}\n        passHref\n      >\n        <Button\n          component=\"a\"\n          startIcon={icon}\n          disableRipple\n          sx={{\n            backgroundColor: active && 'rgba(255,255,255, 0.08)',\n            borderRadius: 1,\n            color: active ? 'secondary.main' : 'neutral.300',\n            fontWeight: active && 'fontWeightBold',\n            justifyContent: 'flex-start',\n            px: 3,\n            textAlign: 'left',\n            textTransform: 'none',\n            width: '100%',\n            '& .MuiButton-startIcon': {\n              color: active ? 'secondary.main' : 'neutral.400'\n            },\n            '&:hover': {\n              backgroundColor: 'rgba(255,255,255, 0.08)'\n            }\n          }}\n        >\n          <Box sx={{ flexGrow: 1 }}>\n            {title}\n          </Box>\n        </Button>\n      </NextLink>\n    </ListItem>\n  );\n};\n\nNavItem.propTypes = {\n  href: PropTypes.string,\n  icon: PropTypes.node,\n  title: PropTypes.string\n};\n","import { useEffect } from 'react';\nimport NextLink from 'next/link';\nimport { useRouter } from 'next/router';\nimport PropTypes from 'prop-types';\nimport { Box, Button, Divider, Drawer, Typography, useMediaQuery } from '@mui/material';\nimport OpenInNewIcon from '@mui/icons-material/OpenInNew';\nimport { ChartBar as ChartBarIcon } from './icons/chart-bar';\nimport { Cog as CogIcon } from './icons/cog';\nimport { Lock as LockIcon } from './icons/lock';\nimport { Selector as SelectorIcon } from './icons/selector';\nimport { ShoppingBag as ShoppingBagIcon } from './icons/shopping-bag';\nimport { User as UserIcon } from './icons/user';\nimport { UserAdd as UserAddIcon } from './icons/user-add';\nimport { Users as UsersIcon } from './icons/users';\nimport { XCircle as XCircleIcon } from './icons/x-circle';\nimport { Logo } from './logo';\nimport { NavItem } from './nav-item';\n\nconst items = [\n  {\n    href: '/dashboard',\n    icon: (<ChartBarIcon fontSize=\"small\" />),\n    title: 'Dashboard'\n  },\n  // {\n  //   href: '/customers',\n  //   icon: (<UsersIcon fontSize=\"small\" />),\n  //   title: 'Customers'\n  // },\n  // {\n  //   href: '/products',\n  //   icon: (<ShoppingBagIcon fontSize=\"small\" />),\n  //   title: 'Products'\n  // },\n  {\n    href: '/account',\n    icon: (<UserIcon fontSize=\"small\" />),\n    title: 'Account'\n  },\n  {\n    href: '/settings',\n    icon: (<CogIcon fontSize=\"small\" />),\n    title: 'Settings'\n  },\n  // {\n  //   href: '/login',\n  //   icon: (<LockIcon fontSize=\"small\" />),\n  //   title: 'Login'\n  // },\n  // {\n  //   href: '/register',\n  //   icon: (<UserAddIcon fontSize=\"small\" />),\n  //   title: 'Register'\n  // },\n  {\n    href: '/404',\n    icon: (<XCircleIcon fontSize=\"small\" />),\n    title: 'Error'\n  }\n];\n\nexport const DashboardSidebar = (props) => {\n  const { open, onClose } = props;\n  const router = useRouter();\n  const lgUp = useMediaQuery((theme) => theme.breakpoints.up('lg'), {\n    defaultMatches: true,\n    noSsr: false\n  });\n\n  useEffect(\n    () => {\n      if (!router.isReady) {\n        return;\n      }\n\n      if (open) {\n        onClose?.();\n      }\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [router.asPath]\n  );\n\n  const content = (\n    <>\n      <Box\n        sx={{\n          display: 'flex',\n          flexDirection: 'column',\n          height: '100%'\n        }}\n      >\n        <div>\n          <Box sx={{ p: 3 }}>\n            <NextLink\n              href=\"/\"\n              passHref\n            >\n              <a>\n                <Logo\n                  sx={{\n                    height: 42,\n                    width: 42\n                  }}\n                />\n              </a>\n            </NextLink>\n          </Box>\n          <Box sx={{ px: 2 }}>\n            <Box\n              sx={{\n                alignItems: 'center',\n                backgroundColor: 'rgba(255, 255, 255, 0.04)',\n                cursor: 'pointer',\n                display: 'flex',\n                justifyContent: 'space-between',\n                px: 3,\n                py: '11px',\n                borderRadius: 1\n              }}\n            >\n              <div>\n                <Typography\n                  color=\"inherit\"\n                  variant=\"subtitle1\"\n                >\n                  Fitbit App\n                </Typography>\n                {/* <Typography\n                  color=\"neutral.400\"\n                  variant=\"body2\"\n                >\n                  Your tier\n                  {' '}\n                  : Premium\n                </Typography> */}\n              </div>\n              {/* <SelectorIcon\n                sx={{\n                  color: 'neutral.500',\n                  width: 14,\n                  height: 14\n                }}\n              /> */}\n            </Box>\n          </Box>\n        </div>\n        <Divider\n          sx={{\n            borderColor: '#2D3748',\n            my: 3\n          }}\n        />\n        <Box sx={{ flexGrow: 1 }}>\n          {items.map((item) => (\n            <NavItem\n              key={item.title}\n              icon={item.icon}\n              href={item.href}\n              title={item.title}\n            />\n          ))}\n        </Box>\n        <Divider sx={{ borderColor: '#2D3748' }} />\n        {/* <Box\n          sx={{\n            px: 2,\n            py: 3\n          }}\n        >\n          <Typography\n            color=\"neutral.100\"\n            variant=\"subtitle2\"\n          >\n            Need more features?\n          </Typography>\n          <Typography\n            color=\"neutral.500\"\n            variant=\"body2\"\n          >\n            Check out our Pro solution template.\n          </Typography>\n          <Box\n            sx={{\n              display: 'flex',\n              mt: 2,\n              mx: 'auto',\n              width: '160px',\n              '& img': {\n                width: '100%'\n              }\n            }}\n          >\n            <img\n              alt=\"Go to pro\"\n              src=\"/static/images/sidebar_pro.png\"\n            />\n          </Box>\n          <NextLink\n            href=\"https://material-kit-pro-react.devias.io/\"\n            passHref\n          >\n            <Button\n              color=\"secondary\"\n              component=\"a\"\n              endIcon={(<OpenInNewIcon />)}\n              fullWidth\n              sx={{ mt: 2 }}\n              variant=\"contained\"\n            >\n              Pro Live Preview\n            </Button>\n          </NextLink>\n        </Box> */}\n      </Box>\n    </>\n  );\n\n  if (lgUp) {\n    return (\n      <Drawer\n        anchor=\"left\"\n        open\n        PaperProps={{\n          sx: {\n            backgroundColor: 'neutral.900',\n            color: '#FFFFFF',\n            width: 280\n          }\n        }}\n        variant=\"permanent\"\n      >\n        {content}\n      </Drawer>\n    );\n  }\n\n  return (\n    <Drawer\n      anchor=\"left\"\n      onClose={onClose}\n      open={open}\n      PaperProps={{\n        sx: {\n          backgroundColor: 'neutral.900',\n          color: '#FFFFFF',\n          width: 280\n        }\n      }}\n      sx={{ zIndex: (theme) => theme.zIndex.appBar + 100 }}\n      variant=\"temporary\"\n    >\n      {content}\n    </Drawer>\n  );\n};\n\nDashboardSidebar.propTypes = {\n  onClose: PropTypes.func,\n  open: PropTypes.bool\n};\n","import { useState } from 'react';\nimport { Box } from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport { DashboardNavbar } from './dashboard-navbar';\nimport { DashboardSidebar } from './dashboard-sidebar';\n\nconst DashboardLayoutRoot = styled('div')(({ theme }) => ({\n  display: 'flex',\n  flex: '1 1 auto',\n  maxWidth: '100%',\n  paddingTop: 64,\n  [theme.breakpoints.up('lg')]: {\n    paddingLeft: 280\n  }\n}));\n\nexport const DashboardLayout = (props) => {\n  const { children } = props;\n  const [isSidebarOpen, setSidebarOpen] = useState(true);\n\n  return (\n    <>\n      <DashboardLayoutRoot>\n        <Box\n          sx={{\n            display: 'flex',\n            flex: '1 1 auto',\n            flexDirection: 'column',\n            width: '100%'\n          }}\n        >\n          {children}\n        </Box>\n      </DashboardLayoutRoot>\n      <DashboardNavbar onSidebarOpen={() => setSidebarOpen(true)} />\n      <DashboardSidebar\n        onClose={() => setSidebarOpen(false)}\n        open={isSidebarOpen}\n      />\n    </>\n  );\n};","import { Bar } from 'react-chartjs-2';\nimport { useEffect, useState} from 'react';\nimport { Box, Button, Card, CardContent, CardHeader, Divider, useTheme } from '@mui/material';\nimport ArrowDropDownIcon from '@mui/icons-material/ArrowDropDown';\nimport ArrowRightIcon from '@mui/icons-material/ArrowRight';\nimport ReactEcharts from \"echarts-for-react\";\nimport { store } from \"../App\";\nimport { useAuth } from \"../contexts/AuthContext\";\nimport Dashboard from \"../components/Dashboard\";\n\n\nexport const CaloriesBurned = (props) => {\n  const theme = useTheme();\n  const state = store.getState();\n  const [dateArray, setDateArray] = useState([]);\n  const [caloriesBurnedArray, setCaloriesBurnedArray] = useState([]);\n  const { timeSeriesData } = useAuth()\n  const heartrate = \"heartrate\"\n  const dateToday = new Date()\n  dateToday.setDate(dateToday.getDate() -1)\n  const [error, setError] = useState(\"\")\n\n  function formatDate(date) {\n    var d = new Date(date),\n        month = '' + (d.getMonth() + 1),\n        day = '' + (d.getDate()),\n        year = d.getFullYear();\n    if (month.length < 2) \n        month = '0' + month;\n    if (day.length < 2) \n        day = '0' + day;\n\n    return [year, month, day].join('-');\n}\n\n    useEffect(() => {\n      const getCalories = async () => {\n        const response = await timeSeriesData(heartrate, \"2022-01-01\", formatDate(dateToday))\n        console.log(response)\n        if(response.status_code === 203){\n          <Dashboard caloriesAccess = {false}/>\n        }\n        setDateArray([])\n        setCaloriesBurnedArray([])\n        for (var i = 0; i < response.data.length; i++) {\n          var caloriesTotal = 0;\n          var dateVal = response.data[i].date;\n          for (var j = 0; j < response.data[i].heartrate_zones.length; j++) {\n            caloriesTotal += response.data[i].heartrate_zones[j].caloriesOut\n          }\n          Math.round(caloriesTotal)\n          setDateArray(dateArray => [...dateArray, dateVal]);\n          setCaloriesBurnedArray(caloriesBurnedArray => [...caloriesBurnedArray, Math.round(caloriesTotal)]);\n          // heartRateArray.push(heartrateVal)\n          // dateArray.push(dateVal)\n          // console.log(heartrateVal.resting_heartrate);\n        }\n        <Dashboard caloriesAccess = {true}/>\n        // console.log(dateArray)\n        // console.log(heartRateArray)\n      };\n      getCalories();\n    }, []);\n\n    async function lastYearCalories(e) {\n      e.preventDefault()\n    \n      try {\n          setError(\"\")\n          const response = await timeSeriesData(heartrate, \"2021-01-01\", \"2021-12-30\")\n          console.log(response)\n          setDateArray([])\n          setCaloriesBurnedArray([])\n          for (var i = 0; i < response.data.length; i++) {\n            var caloriesTotal = 0;\n            var dateVal = response.data[i].date;\n            for (var j = 0; j < response.data[i].heartrate_zones.length; j++) {\n              caloriesTotal += response.data[i].heartrate_zones[j].caloriesOut\n            }\n            Math.round(caloriesTotal)\n            setDateArray(dateArray => [...dateArray, dateVal]);\n            setCaloriesBurnedArray(caloriesBurnedArray => [...caloriesBurnedArray, Math.round(caloriesTotal)]);\n            // heartRateArray.push(heartrateVal)\n            // dateArray.push(dateVal)\n            // console.log(heartrateVal.resting_heartrate);\n          }\n          // console.log(dataArray)\n          // console.log(dateArray)\n      }\n      catch {\n          setError(\"Can't get steps\")\n      }\n  \n  }\n\n  return (\n    <Card {...props}>\n      <CardHeader\n        action={(\n          <div>\n          <Button\n            endIcon={<ArrowDropDownIcon fontSize=\"small\" />}\n            size=\"small\"\n          >\n            Year\n          </Button>\n          <div>\n              <Button onClick={lastYearCalories} size = \"small\">2021</Button>\n          </div>\n          </div>\n        )}\n        title=\"Calories Burned\"\n      />\n      <Divider />\n      <CardContent>\n        {/* <Box\n          sx={{\n            height: 400,\n            position: 'relative'\n          }}\n        >\n          <Bar\n            data={data}\n            options={options}\n          />\n        </Box> */}\n        <ReactEcharts\n      option={{\n        title: {\n          text: `${state.storeAccess[0].data.username} Calories Burned`,\n        },\n        tooltip: {\n          trigger: 'axis',\n          axisPointer: {\n            type: 'shadow'\n          }\n        },\n        dataZoom: [\n          {\n            type: 'slider',\n            show: true,\n            xAxisIndex: [0],\n            start: 96,\n            end: 100\n          },\n        ],\n        toolbox: {\n          show: true,\n          feature: {\n            dataView: { readOnly: false },\n            restore: {},\n            saveAsImage: {}\n          }\n        },\n        xAxis: {\n          type: 'category',\n          // data: ['2021-10-09', '2021-10-10', '2021-10-11', '2021-10-12', '2021-10-13', '2021-10-14', '2021-10-15', '2021-10-16', '2021-10-17', '2021-10-18', '2021-10-19', '2021-10-20', '2021-10-21', '2021-10-22', '2021-10-23', '2021-10-24', '2021-10-25', '2021-10-26', '2021-10-27', '2021-10-28', '2021-10-29', '2021-10-30', '2021-10-31', '2021-11-01', '2021-11-02', '2021-11-03', '2021-11-04', '2021-11-05', '2021-11-06', '2021-11-07', '2021-11-08', '2021-11-09', '2021-11-10', '2021-11-11', '2021-11-12', '2021-11-13', '2021-11-14', '2021-11-15', '2021-11-16', '2021-11-17', '2021-11-18', '2021-11-19', '2021-11-20', '2021-11-21', '2021-11-22', '2021-11-23', '2021-11-24', '2021-11-25', '2021-11-26' ]\n          data: dateArray\n        },\n        yAxis: {\n          type: 'value', \n          axisLabel: {\n            formatter: '{value} cals'\n          },\n        },\n        series: [\n          {\n            data: caloriesBurnedArray,\n            // data: [80, 80, 79, 78, 79, 80, 82, 83, 81, 81, 81, 79, 79, 78, 79, 81, 83, 84, 85, 85, 86, 85, 82, 84, 83, 82, 83, 83, 85, 83, 81, 81, 80, 81, 81, 82, 81, 79, 78, 81, 80, 79, 81, 82, 84, 83, 83, 83, 83],\n            type: 'line'\n          }\n        ]\n        }}\n      />\n      </CardContent>\n      {/* <Divider /> */}\n      <Box\n        sx={{\n          display: 'flex',\n          justifyContent: 'flex-end',\n          p: 2\n        }}\n      >\n        {/* <Button\n          color=\"primary\"\n          endIcon={<ArrowRightIcon fontSize=\"small\" />}\n          size=\"small\"\n        >\n          More Health Metrics\n        </Button> */}\n      </Box>\n    </Card>\n  );\n};","import Head from 'next/head';\nimport { Box, Container, Grid } from '@mui/material';\nimport { StepsIntraday } from '../dashboard/stepsIntraday';\nimport { StepsTimeSeries } from '../dashboard/stepsTimeSeries';\nimport { LatestProducts } from '../dashboard/latest-products';\nimport { HeartRateTimeSeries } from '../dashboard/heartrateTimeSeries';\nimport { SleepIntraday } from '../dashboard/sleepIntraday';\nimport { CaloriesIntraday } from '../dashboard/caloriesIntraday';\nimport { HeartRateIntraday } from '../dashboard/heartrateIntraday';\nimport { SleepEfficiency } from '../dashboard/sleepEfficiency';\nimport { DashboardLayout } from '../dashboard-layout';\nimport { CaloriesBurned } from '../dashboard/calories-burned';\n\n\nexport default function Dashboard(props){\n  return (\n    <>\n    <Head>\n      <title>\n        Dashboard | Material Kit\n      </title>\n    </Head>\n    <Box\n      component=\"main\"\n      sx={{\n        flexGrow: 1,\n        py: 8\n      }}\n    >\n      <Container maxWidth={false}>\n        <Grid\n          container\n          spacing={3}\n        >\n          <Grid\n            item\n            lg={3}\n            sm={6}\n            xl={3}\n            xs={12}\n          >\n            <StepsIntraday />\n          </Grid>\n          <Grid\n            item\n            xl={3}\n            lg={3}\n            sm={6}\n            xs={12}\n          >\n            <CaloriesIntraday />\n          </Grid>\n          <Grid\n            item\n            xl={3}\n            lg={3}\n            sm={6}\n            xs={12}\n          >\n            <SleepIntraday />\n          </Grid>\n          <Grid\n            item\n            xl={3}\n            lg={3}\n            sm={6}\n            xs={12}\n          >\n            <HeartRateIntraday sx={{ height: '100%' }} />\n          </Grid>\n          {<Grid\n            item\n            lg={8}\n            md={12}\n            xl={9}\n            xs={12}\n          >\n            <HeartRateTimeSeries sx={{ height: '100%' }}/>\n          </Grid>}\n          <Grid\n            item\n            lg={4}\n            md={6}\n            xl={3}\n            xs={12}\n          >\n            <SleepEfficiency sx={{ height: '100%' }} />\n          </Grid>\n          {/* <Grid\n            item\n            lg={4}\n            md={6}\n            xl={3}\n            xs={12}\n          >\n            <LatestProducts sx={{ height: '100%' }} />\n          </Grid> */}\n          {<Grid\n            item\n            lg={12}\n            md={18}\n            xl={12}\n            xs={24}\n          >\n            <StepsTimeSeries />\n          </Grid>}\n          {<Grid\n            item\n            lg={12}\n            md={18}\n            xl={12}\n            xs={24}\n          >\n            <CaloriesBurned />\n          </Grid>}\n        </Grid>\n      </Container>\n    </Box>\n  </>  \n)}\n\nDashboard.getLayout = (page) => (\n  <DashboardLayout>\n    {page}\n  </DashboardLayout>\n);\n\n// export default Dashboard;\n\n\n\n// import React from \"react\";\n// import { useNavigate } from \"react-router-dom\";\n\n// import  { Component } from \"react\";\n// import ReactEcharts from \"echarts-for-react\";\n// import Header from './Header';\n\n// const colors = ['#5470C6', '#EE6666'];\n\n\n// function ActivitySteps(){\n//   return (\n//     <ReactEcharts\n//       option={{\n//         title: {\n//           text: 'Haoyu Activity Steps',\n//         },\n//         tooltip: {\n//           trigger: 'axis',\n//           axisPointer: {\n//             type: 'shadow'\n//           }\n//         },\n//         dataZoom: [\n//           {\n//             type: 'slider',\n//             show: true,\n//             xAxisIndex: [0],\n//             start: 1,\n//             end: 12\n//           },\n//         ],\n//         toolbox: {\n//           show: true,\n//           feature: {\n//             dataView: { readOnly: false },\n//             restore: {},\n//             saveAsImage: {}\n//           }\n//         },\n//         xAxis: {\n//           type: 'category',\n//           data: ['2021-10-09', '2021-10-10', '2021-10-11', '2021-10-12', '2021-10-13', '2021-10-14', '2021-10-15', '2021-10-16', '2021-10-17', '2021-10-18', '2021-10-19', '2021-10-20', '2021-10-21', '2021-10-22', '2021-10-23', '2021-10-24', '2021-10-25', '2021-10-26', '2021-10-27', '2021-10-28', '2021-10-29', '2021-10-30', '2021-10-31', '2021-11-01', '2021-11-02', '2021-11-03', '2021-11-04', '2021-11-05', '2021-11-06', '2021-11-07', '2021-11-08', '2021-11-09', '2021-11-10', '2021-11-11', '2021-11-12', '2021-11-13', '2021-11-14', '2021-11-15', '2021-11-16', '2021-11-17', '2021-11-18', '2021-11-19', '2021-11-20', '2021-11-21', '2021-11-22', '2021-11-23', '2021-11-24', '2021-11-25', '2021-11-26' ]\n//         },\n//         yAxis: {\n//           type: 'value', \n//           axisLabel: {\n//             formatter: '{value} Steps'\n//           },\n//         },\n//         series: [\n//           {\n//             data: [4168, 12441, 3297, 2801, 5465, 5609, 3907, 3487, 2967, 4988, 3620, 3648, 3635, 7262, 2138, 2177, 3431, 3424, 5990, 5262, 3882, 10322, 4370, 2621, 4715, 2951, 8873, 7002, 3711, 2692, 3106, 5574, 3381, 3430, 3492, 4225, 2738, 2048, 4196, 6041, 2918, 2366, 3848, 7078, 3129, 2387, 3252, 2626, 6399],\n//             type: 'line'\n//           }\n//         ]\n//         }}\n//       />\n//     );\n// }\n\n// function RestingHeartRate(){\n//   return (\n//     <ReactEcharts\n//       option={{\n//         title: {\n//           text: 'Haoyu Resting Heart Rate',\n//         },\n//         tooltip: {\n//           trigger: 'axis',\n//           axisPointer: {\n//             type: 'shadow'\n//           }\n//         },\n//         dataZoom: [\n//           {\n//             type: 'slider',\n//             show: true,\n//             xAxisIndex: [0],\n//             start: 1,\n//             end: 12\n//           },\n//         ],\n//         toolbox: {\n//           show: true,\n//           feature: {\n//             dataView: { readOnly: false },\n//             restore: {},\n//             saveAsImage: {}\n//           }\n//         },\n//         xAxis: {\n//           type: 'category',\n//           data: ['2021-10-09', '2021-10-10', '2021-10-11', '2021-10-12', '2021-10-13', '2021-10-14', '2021-10-15', '2021-10-16', '2021-10-17', '2021-10-18', '2021-10-19', '2021-10-20', '2021-10-21', '2021-10-22', '2021-10-23', '2021-10-24', '2021-10-25', '2021-10-26', '2021-10-27', '2021-10-28', '2021-10-29', '2021-10-30', '2021-10-31', '2021-11-01', '2021-11-02', '2021-11-03', '2021-11-04', '2021-11-05', '2021-11-06', '2021-11-07', '2021-11-08', '2021-11-09', '2021-11-10', '2021-11-11', '2021-11-12', '2021-11-13', '2021-11-14', '2021-11-15', '2021-11-16', '2021-11-17', '2021-11-18', '2021-11-19', '2021-11-20', '2021-11-21', '2021-11-22', '2021-11-23', '2021-11-24', '2021-11-25', '2021-11-26' ]\n//         },\n//         yAxis: {\n//           type: 'value', \n//           axisLabel: {\n//             formatter: '{value} bpm'\n//           },\n//         },\n//         series: [\n//           {\n//             data: [80, 80, 79, 78, 79, 80, 82, 83, 81, 81, 81, 79, 79, 78, 79, 81, 83, 84, 85, 85, 86, 85, 82, 84, 83, 82, 83, 83, 85, 83, 81, 81, 80, 81, 81, 82, 81, 79, 78, 81, 80, 79, 81, 82, 84, 83, 83, 83, 83],\n//             type: 'line'\n//           }\n//         ]\n//         }}\n//       />\n//     );\n// }\n\n\n// function SleepEfficiency(){\n//   return (\n//     <ReactEcharts\n//       option={{\n//         title: {\n//           text: 'Haoyu Sleep Efficiency',\n//         },\n//         tooltip: {\n//           trigger: 'axis',\n//           axisPointer: {\n//             type: 'shadow'\n//           }\n//         },\n//         toolbox: {\n//           show: true,\n//           feature: {\n//             dataView: { readOnly: false },\n//             restore: {},\n//             saveAsImage: {}\n//           }\n//         },\n//         dataZoom: [\n//           {\n//             type: 'slider',\n//             show: true,\n//             xAxisIndex: [0],\n//             start: 5,\n//             end: 80\n//           },\n//         ],\n//         xAxis: {\n//           type: 'category',\n//           data: ['2021-11-18', '2021-11-19', '2021-11-20', '2021-11-21', '2021-11-22', '2021-11-23', '2021-11-24', '2021-11-25', '2021-11-26' ],\n//           axisTick: {\n//             alignWithLabel: true\n//           }\n//         },\n//         yAxis: {\n//           type: 'value'\n//         },\n//         series: [\n//           {\n//             name: 'Efficiency',\n//             data: [93, 88, 90, 90, 87, 75, 93, 91, 91],\n//             type: 'bar',\n//             showBackground: true,\n//             backgroundStyle: {\n//               color: 'rgba(180, 180, 180, 0.2)'\n//             }\n//           }\n//         ]\n//         }}\n//       />\n//     );\n// }\n\n\n// function StepGoals(){\n//   return (\n//     <ReactEcharts\n//       option={{\n//         tooltip: {\n//           formatter: '{a} <br/>{b} : {c}%',\n//         },\n//         series: [\n//           {\n//             name: 'Pressure',\n//             type: 'gauge',\n//             detail: {\n//               formatter: '{value}'\n//             },\n//             data: [\n//               {\n//                 value: 92,\n//                 name: 'Sleep Rating'\n//               }\n//             ]\n//           }\n//         ]\n//         }}\n//       />\n//     );\n// }\n\n// function HeartRate(){\n//   return(\n//     <ReactEcharts\n//       option = {{\n//         color: colors,\n//         tooltip: {\n//         trigger: 'none',\n//         axisPointer: {\n//           type: 'cross'\n//         }\n//       },\n//       legend: {},\n//       grid: {\n//         top: 70,\n//         bottom: 50\n//       },\n//       xAxis: [\n//       {\n//         type: 'category',\n//         axisTick: {\n//         alignWithLabel: true\n//       },\n//       axisLine: {\n//         onZero: false,\n//         lineStyle: {\n//           color: colors[1]\n//         }\n//       },\n//       axisPointer: {\n//         label: {\n//           formatter: function (params) {\n//             return (\n//               'Heart Rate  ' +\n//               params.value +\n//               (params.seriesData.length ? '：' + params.seriesData[0].data : '')\n//             );\n//           }\n//         }\n//       },\n//       // prettier-ignore\n//       data: ['2021-1', '2021-2', '2021-3', '2021-4', '2021-5', '2021-6', '2021-7', '2021-8', '2021-9', '2021-10', '2021-11', '2021-12']\n//       },\n//       {\n//         type: 'category',\n//         axisTick: {\n//         alignWithLabel: true\n//         },\n//       axisLine: {\n//         onZero: false,\n//         lineStyle: {\n//           color: colors[0]\n//         }\n//       },\n//       axisPointer: {\n//         label: {\n//           formatter: function (params) {\n//             return (\n//               'Heart Rate  ' +\n//               params.value +\n//               (params.seriesData.length ? '：' + params.seriesData[0].data : '')\n//             );\n//           }\n//         }\n//       },\n//       // prettier-ignore\n//       data: ['2020-1', '2020-2', '2020-3', '2020-4', '2020-5', '2020-6', '2020-7', '2020-8', '2020-9', '2020-10', '2020-11', '2020-12']\n//     }\n//     ],\n//       yAxis: [\n//         {\n//           type: 'value'\n//         }\n//       ],\n//       series: [\n//         {\n//           name: 'Heart Rate(2020)',\n//           type: 'line',\n//           xAxisIndex: 1,\n//           smooth: true,\n//           emphasis: {\n//             focus: 'series'\n//           },\n//           data: [\n//             68, 71, 70, 94, 81, 88, 91, 85, 82, 87, 75, 95\n//           ]\n//         },\n//       {\n//           name: 'Heart Rate(2021)',\n//           type: 'line',\n//           smooth: true,\n//           emphasis: {\n//           focus: 'series'\n//          },\n//           data: [\n//             61, 89, 82, 96, 63, 71, 94, 67, 85, 72, 90, 69\n//           ]\n//         }\n//       ]\n//     }}\n//     />\n//   );\n// }\n\n\n// const Dashboard = (props) => {\n//   const navigate = useNavigate();\n//   return (\n//     <>\n//        <div>\n//         <Header />\n//         <div>\n//           <StepGoals />\n//           <SleepEfficiency />\n//           <ActivitySteps />\n//           <RestingHeartRate />\n//         </div>\n//       </div>\n//     </>\n//   );\n// };\n\n// export default Dashboard;","import { Box, Button, Container, Typography } from '@mui/material';\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\n\nconst NotFound = () => (\n  <>\n    <Box\n      component=\"main\"\n      sx={{\n        alignItems: 'center',\n        display: 'flex',\n        flexGrow: 1,\n        minHeight: '100%'\n      }}\n    >\n      <Container maxWidth=\"md\">\n        <Box\n          sx={{\n            alignItems: 'center',\n            display: 'flex',\n            flexDirection: 'column'\n          }}\n        >\n          <Typography\n            align=\"center\"\n            color=\"textPrimary\"\n            variant=\"h1\"\n          >\n            404: The page you are looking for isn’t here\n          </Typography>\n          <Typography\n            align=\"center\"\n            color=\"textPrimary\"\n            variant=\"subtitle2\"\n          >\n            Authorization Failed, mismatch account permission. Select all permissions and try again. \n          </Typography>\n          <Box sx={{ textAlign: 'center' }}>\n            <img\n              alt=\"Under development\"\n              src=\"/static/images/undraw_page_not_found_su7k.svg\"\n              style={{\n                marginTop: 50,\n                display: 'inline-block',\n                maxWidth: '100%',\n                width: 560\n              }}\n            />\n          </Box>\n        <Button\n            component=\"a\"\n            startIcon={(<ArrowBackIcon fontSize=\"small\" />)}\n            sx={{ mt: 3 }}\n            variant=\"contained\"\n\n        >\n            Go back to authorization\n            </Button>\n        </Box>\n      </Container>\n    </Box>\n  </>\n);\n\nexport default NotFound;","import { Box, Button, Container, Typography } from '@mui/material';\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\n\nconst InvalidToken = () => (\n  <>\n    <Box\n      component=\"main\"\n      sx={{\n        alignItems: 'center',\n        display: 'flex',\n        flexGrow: 1,\n        minHeight: '100%'\n      }}\n    >\n      <Container maxWidth=\"md\">\n        <Box\n          sx={{\n            alignItems: 'center',\n            display: 'flex',\n            flexDirection: 'column'\n          }}\n        >\n          <Typography\n            align=\"center\"\n            color=\"textPrimary\"\n            variant=\"h1\"\n          >\n            404: The page you are looking for isn’t here\n          </Typography>\n          <Typography\n            align=\"center\"\n            color=\"textPrimary\"\n            variant=\"subtitle2\"\n          >\n            Authorization Failed, invalid token.\n          </Typography>\n          <Box sx={{ textAlign: 'center' }}>\n            <img\n              alt=\"Under development\"\n              src=\"/static/images/undraw_page_not_found_su7k.svg\"\n              style={{\n                marginTop: 50,\n                display: 'inline-block',\n                maxWidth: '100%',\n                width: 560\n              }}\n            />\n          </Box>\n        <Button\n            component=\"a\"\n            startIcon={(<ArrowBackIcon fontSize=\"small\" />)}\n            sx={{ mt: 3 }}\n            variant=\"contained\"\n\n        >\n            Go back to authorization\n            </Button>\n        </Box>\n      </Container>\n    </Box>\n  </>\n);\n\nexport default InvalidToken;","// src/Login.js \nimport React, { useRef, useState } from \"react\"\nimport { Form, Button, Card, Navbar, Alert } from 'react-bootstrap'\nimport Header from './Header';\nimport { useNavigate } from \"react-router-dom\";\nimport { useAuth } from \"../contexts/AuthContext\";\n// import { store } from \"../index\";\nimport { store } from \"../App\";\n\n\nconst MyAccount = (props) => {\n    // const emailRef = useRef()\n \n    const [error, setError] = useState(\"\")\n    const { authorization } = useAuth()\n    const { currentUser, logout, deleteAccount } = useAuth()\n    const passwordRef = useRef()\n    const navigate = useNavigate();\n\n\n    async function handleLogout() {\n\n        try {\n            \n            setError(\"\")\n            \n            const response = await logout();\n            console.log(response)\n            \n            if(response.status_code === 200 ){\n                navigate(\"/\");\n                console.log(store.getState());\n                \n            }\n            // else{\n            //     // if is not necessary but makes more explict \n            //     if(response.status_code === 401 || response.status_code === 400 ){\n            //     //if(response.status_code === 401 || response.status_code === 400 ){\n            //         console.log(response.detail);\n            //         setError(response.detail);\n            //     }\n            // }\n        } \n        catch {\n            setError(\"Failed to log out\")\n        }\n    }\n\n    async function handleDeleteAccount() {\n     \n        try{\n        setError(\"\")\n        const response = await deleteAccount(passwordRef.current.value)\n        console.log(response)\n\n        if(response.status_code === 200){ // checks what type of response \n           \n            navigate(\"/\");\n        } else {\n            setError(\"Invalid password\")\n            \n        }\n        }catch{\n            setError(\"Failed to delete account\")\n        }\n\n       \n    }\n\n    return (\n        <>\n\n            <Navbar>\n                <Header />\n            </Navbar>\n\n            <div style={{ padding: 50 }}>\n                <h1>Account Information:</h1>\n                <p>Click box to edit the following</p>\n\n                <Form>\n                    <Form.Group id=\"username\">\n                        <Form.Label>Username</Form.Label>\n                        <Form.Control type=\"username\" required />\n\n                    </Form.Group>\n                    <Form.Group id=\"first-name\">\n                        <Form.Label>First Name</Form.Label>\n                        <Form.Control type=\"firstname\" required />\n                    </Form.Group>\n                    <Form.Group id=\"last-name\">\n                        <Form.Label>Last Name</Form.Label>\n                        <Form.Control type=\"lastname\" required />\n                    </Form.Group>\n                    <Form.Group id=\"email\">\n                        <Form.Label>Email</Form.Label>\n                        <Form.Control type=\"email\" required />\n                    </Form.Group>\n                    <Form.Group id=\"password\">\n                        <Form.Label>Password</Form.Label>\n                        <Form.Control type=\"password\" required />\n                    </Form.Group>\n                    <Button className=\"w-100 text\">Update Changes </Button>\n                </Form>\n\n                <div className=\"w-100 text-center mt-2\">\n                    <Button onClick={handleLogout}>\n                        Log Out\n                    </Button>\n\n\n\n\n                </div>\n                <Card>\n                    <Card.Body>\n\n                        < Form   style={{ margin: 20 }} >\n                            {error && <Alert variant=\"danger\">{error}</Alert>}\n\n                            <Form.Group id=\"password\">\n                                <Form.Label> Confirm Password 2 delete</Form.Label>\n                                <Form.Control type=\"password\" ref={passwordRef} required />\n                            </Form.Group>\n\n                            <Button onClick={handleDeleteAccount}  className=\"w-100 text\">Delete Account </Button>\n                        </Form>\n                    </Card.Body>\n                </Card>\n\n\n\n            </div>\n\n\n\n\n        </>\n\n    );\n\n};\nexport default MyAccount;","import React, { useRef, useState } from \"react\"\nimport { Form, Button, Card,Navbar, Alert} from 'react-bootstrap'\nimport Header from './Header';\nimport \"bootstrap/dist/css/bootstrap.min.css\"\nimport { useNavigate } from \"react-router-dom\";\nimport { useAuth } from \"../contexts/AuthContext\"\n\n\n\nconst Share = (props) => {\n    const navigate = useNavigate();\n    const [steps, setSteps] = useState(false)\n    const [heartrate, setHeartRate] = useState(false)\n    const [sleep, setSleep] = useState(false)\n    const [stepsintraday, setStepsIntraday] = useState(false)\n    const [heartrateintraday, setHeartRateIntraday] = useState(false)\n    const [error, setError] = useState(\"\")\n    const [success, setSuccess] = useState(\"\")\n    const [keyVal, setKeyVal]= useState(\"\")\n    const { createKey } = useAuth()\n\n    // let shareState = {\n    //     dataShareValues: {\n    //         steps: false,\n    //         heartrate: false,\n    //         sleep: false,\n    //         stepsintraday: false,\n    //         heartrateintraday: false\n    //     }\n    // }\n\n    async function handleKey(e) {\n        e.preventDefault();\n\n        try {\n            setError(\"\")\n            setSuccess(\"\")\n             \n            const response = await createKey(steps, heartrate, sleep, stepsintraday, heartrateintraday)\n            console.log(response)\n            if(response.status_code === 403){\n                if(response.data.detail === \"user profile does not exist\"){\n                    setError(\"Fitbit account not authorized\")\n                } \n                else if(response.data.detail === \"user sync status does not exist\"){\n                    setError(\"No tracker data collected\")\n                } else{\n                    setError(\"Maximum allowable key limit reached\")\n                }\n            }else {\n                setSuccess(\"Key successfully created, copy and send to physician!\") \n                setKeyVal(response.data.key)\n            }\n        } catch {\n            setError(\"Failed to create key\")\n        }\n        \n    }\n\n    // const handleCheckbox = event => {\n    //     console.log(event.target.value);\n    //     let state = shareState;\n    //     state.dataShareValues[event.target.value] = event.target.checked;\n    //     this.setState(state)\n    //     console.log(state.dataShareValues);\n    // }\n    \n    return (\n        <>\n        \n         <Navbar>\n             <Header/>\n         </Navbar>\n            \n        <Card style = {{padding: 50, width: 500}} >\n            <Card.Body>\n                <\n                    h2 className = 'text-center '>Share Data with Physician</h2>\n                <div className = \"d-grid gap-2\">\n                {error && <Alert variant=\"danger\">{error}</Alert>}\n                {success && <Alert variant=\"success\">{success}</Alert>}\n\n                    {/* <Button onClick = {() => navigate(\"/share/add-physician\")} className = \"w-100 text\">Add a new Physician </Button> */}\n                    <div style = {{padding: 50 }} >\n                        <p>Click box to enable specific sharing data</p>\n                        <label for=\"accept\">\n                            <ul>\n                                <li>\n                                    <input onChange = {(e)=> setSteps(e.target.checked)} type = \"checkbox\" /> Share steps\n                                </li> \n                                <li>\n                                    <input onChange = {(e)=> setHeartRate(e.target.checked)}type = \"checkbox\" /> Share heart rate\n                                </li>\n                                <li>\n                                    <input onChange = {(e)=> setSleep(e.target.checked)} type = \"checkbox\" /> Share sleep data\n                                </li>\n                                <li>\n                                    <input onChange = {(e)=> setStepsIntraday(e.target.checked)} type = \"checkbox\" /> Share step intraday data\n                                </li>\n                                <li>\n                                    <input onChange = {(e)=> setHeartRateIntraday(e.target.checked)} type = \"checkbox\" />Share heart rate intraday data\n                                </li>\n                            </ul>\n                        </label>\n                        \n                        {/* <label>\n                            <ul>\n                                <li>\n                                    <input type = \"checkbox\" name = \"Dr. 1\"/> Dr. 1\n                                </li> \n                                <li>\n                                    <input type = \"checkbox\" name = \"Dr. 2\"/> Dr.2 \n                                </li>\n                                <li>\n                                    <input type = \"checkbox\" name = \"Dr. 3\"/> Dr. 3  \n                                </li>\n                            </ul>\n                        </label> */}\n                        {/* <Button style = {{down: 10}} className = \"w-100 text\">Send Key to Physician</Button> */}\n                        <Button onClick ={handleKey} style = {{down: 400}} className = \"w-100 text\"> Create Key  </Button>\n                        <Form.Control size=\"lg\" type=\"text\" placeholder={ keyVal } />\n                    </div>\n                    {/* <Form.Control size=\"lg\" type=\"text\" placeholder=\"Large text\" />\n                    <Button style = {{down: 400}} className = \"w-100 text\"> Create Key  </Button> */}\n                </div>\n                    \n        \n            </Card.Body>\n        </Card>\n        \n        \n        </>\n    );\n };\n\n export default Share;","// src/Login.js \nimport React from 'react'\nimport { Form, Button, Card, Navbar } from 'react-bootstrap'\nimport { Link } from \"react-router-dom\"\nimport { useNavigate } from \"react-router-dom\";\nimport Header from './Header';\n// import Table from '@mui/material/Table';\n//             import TableBody from '@mui/material/TableBody';\n//             import TableCell from '@mui/material/TableCell';\n//             import TableContainer from '@mui/material/TableContainer';\n//             import TableHead from '@mui/material/TableHead';\n//             import TableRow from '@mui/material/TableRow';\n//             import Paper from '@mui/material/Paper';\nconst Logs = (props) => {\n\n\n    return (\n        <>\n\n            <Navbar>\n                <Header />\n            </Navbar>\n\n\n\n           \n            \n\n      \n\n\n            {/* const rows = [\n            createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\n            createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\n            createData('Eclair', 262, 16.0, 24, 6.0),\n            createData('Cupcake', 305, 3.7, 67, 4.3),\n            createData('Gingerbread', 356, 16.0, 49, 3.9),\n            ]; */}\n\n         \n  \n            {/* <TableContainer component={Paper}>\n                <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\n                    <TableHead>\n                        <TableRow>\n                            <TableCell>Dessert (100g serving)</TableCell>\n                            <TableCell align=\"right\">Calories</TableCell>\n                            <TableCell align=\"right\">Fat&nbsp;(g)</TableCell>\n                            <TableCell align=\"right\">Carbs&nbsp;(g)</TableCell>\n                            <TableCell align=\"right\">Protein&nbsp;(g)</TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {rows.map((row) => (\n                            <TableRow\n                                key={row.name}\n                                sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\n                            >\n                                <TableCell component=\"th\" scope=\"row\">\n                                    {row.name}\n                                </TableCell>\n                                <TableCell align=\"right\">{row.calories}</TableCell>\n                                <TableCell align=\"right\">{row.fat}</TableCell>\n                                <TableCell align=\"right\">{row.carbs}</TableCell>\n                                <TableCell align=\"right\">{row.protein}</TableCell>\n                            </TableRow>\n                        ))}\n                    </TableBody>\n                </Table>\n            </TableContainer> */}\n\n\n        </>\n\n    );\n\n};\nexport default Logs;","import { AccessKey } from './AccessKey';\nimport { combineReducers } from \"redux\";\n\n// File which encapsulates all reducers just add the fields to root reducer\nconst rootReducer = combineReducers({\n    storeAccess: AccessKey,\n    \n})\n\nexport default rootReducer;","export const AccessKey = (state = [], action) => {\n    switch (action.type) {\n        case \"storeAccess\":\n            return [\n                ///...state,\n                state = action.payload,\n                // {\n                //     access: action.payload.access\n                // }\n            ];\n            // same functionality different context \n            // not needed but looks more clear in redux dev tool \n        case \"resfreshedStoreAccess\":\n            return [\n                state = action.payload,\n            ];\n        case \"storeHealthAccess\":\n            return [\n                state = action.payload,\n            ];\n        default:\n            return state;\n    }\n\n}","import React, { useEffect } from 'react';\nimport Signup from \"./components/Signup\";\nimport { Container } from 'react-bootstrap'\n//import {BrowserRouter as Router, Switch, Route } from \"react-router-dom\"\nimport {BrowserRouter as Router, Routes, Route} from \"react-router-dom\"\nimport AddTracker from \"./components/AddTracker\";\nimport Dashboard from \"./components/Dashboard\";\nimport Login from \"./components/Login\";\nimport MismatchError from './components/MismatchError'\nimport InvalidTokenError from './components/InvalidTokenError'\nimport { AuthProvider } from \"./contexts/AuthContext\";\nimport MyAccount from \"./components/MyAccount\";\nimport Share from \"./components/Share\";\nimport Logs from \"./components/Logs\";\n// import ErrorPage from \"./Pages/ErrorPage\";\nimport { PersistGate } from 'redux-persist/integration/react'\nimport { Provider } from 'react-redux'\n\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport logger from 'redux-logger';\nimport rootReducer from './reducers/rootReducer';\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nimport reducer from \"./reducers/rootReducer\";\n\n\n// Redux Persist configuration \nconst persistConfig = {\n  key: 'storeAccess',\n  version: 1,\n  storage,\n};\nconst pReducer = persistReducer(persistConfig, rootReducer);\n//  const middleware = applyMiddleware(thunk, logger);\nconst store = createStore(pReducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\nconst persistor = persistStore(store);\n\n\n// Acessing local storage \nconst tempLS = JSON.parse(window.localStorage.getItem(\"loginResp\"));\n\nconst App = () => {\n\n  // occurs throughout all components, on refresh persist data from local storage \n  useEffect(() => {\n     \n    console.log(tempLS)\n    if(tempLS){\n      store.dispatch({\n        type: \"resfreshedStoreAccess\",\n        payload: {\n          data: {\n            username: tempLS.data.username,\n            first_name: tempLS.data.first_name,\n            last_name: tempLS.data.last_name,\n            email: tempLS.data.email,\n            created_at: tempLS.data.created_at,\n            updated_at: tempLS.data.updated_at,\n            refresh: tempLS.data.refresh,\n            access: tempLS.data.access,\n        },\n        status_code: tempLS.status_code\n        }\n      });\n    }\n    \n    // saves whole login response \n    //type: \"resfreshedStoreAccess\"\n    \n   \n    const state = store.getState();\n    // console.log(state.storeAccess[0].data.access);\n  });\n\n\n  return (\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n\n\n        <AuthProvider>\n          <Container className=\"d-flex algin-items-center justify-content-center\"\n            style={{ minHeight: \"100vh\" }}\n          >\n            {/* <div className=\"w-100\" style={{ maxWidth: \"400px\" }}> */}\n            <div >\n              <Router>\n                <Routes>\n\n                  <Route path=\"/signup\" element={<Signup />} />\n                  <Route path=\"/\" element={<Login />} />\n                  <Route path=\"/share\" element={<Share />} />\n                  <Route path=\"/account\" element={<MyAccount />} />\n                  <Route path=\"/dashboard\" element={<Dashboard />} />\n                  <Route path=\"/addtracker\" element={<AddTracker />} />\n                  <Route path=\"/mismatcherror\" element={<MismatchError />} />\n                  <Route path=\"/invaliderror\" element={<InvalidTokenError />} />\n                  <Route path=\"/logs\" element={<Logs />} />\n\n\n                  {/* <Route path = \"*\" element = {<ErrorPage />}/> */}\n                </Routes>\n              </Router>\n\n            </div>\n\n          </Container>\n        </AuthProvider>\n      </PersistGate>\n    </Provider>\n\n\n\n  );\n\n};\n\nexport default App;\nexport { store, persistor };","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport \"bootstrap/dist/css/bootstrap.min.css\"\n//import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n//reportWebVitals()"],"sourceRoot":""}